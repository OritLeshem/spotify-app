{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-filter.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { playlistService } from '../services/playlist.service';\nimport { SearchSvg } from './form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlaylistFilter(_ref) {\n  _s();\n  let {\n    onSetFilter,\n    title\n  } = _ref;\n  const [filterByToEdit, setFilterByToEdit] = useState(playlistService.getDefaultFilter());\n  function handleChange(_ref2) {\n    let {\n      target\n    } = _ref2;\n    let {\n      value,\n      name: field,\n      type\n    } = target;\n    value = type === 'number' ? +value : value;\n    setFilterByToEdit(prevFilter => ({\n      ...prevFilter,\n      [field]: value\n    }));\n  }\n  function onSubmitFilter(ev) {\n    ev.preventDefault();\n    onSetFilter(filterByToEdit);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"playlist-filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitFilter,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: title ? \"search-detail\" : \"\",\n        type: \"text\",\n        name: \"txt\",\n        placeholder: title || \"What do you want to listen to?\",\n        value: filterByToEdit.txt,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: title ? \"svg-container svg-detail\" : \"svg-container\",\n      children: /*#__PURE__*/_jsxDEV(SearchSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n}\n_s(PlaylistFilter, \"3yVrX9LsRUxpjWhrMODWx0GnBSw=\");\n_c = PlaylistFilter;\nvar _c;\n$RefreshReg$(_c, \"PlaylistFilter\");","map":{"version":3,"names":["useState","playlistService","SearchSvg","jsxDEV","_jsxDEV","PlaylistFilter","_ref","_s","onSetFilter","title","filterByToEdit","setFilterByToEdit","getDefaultFilter","handleChange","_ref2","target","value","name","field","type","prevFilter","onSubmitFilter","ev","preventDefault","className","children","onSubmit","placeholder","txt","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-filter.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { playlistService } from '../services/playlist.service'\nimport { SearchSvg } from './form'\n\nexport function PlaylistFilter({ onSetFilter, title }) {\n    const [filterByToEdit, setFilterByToEdit] = useState(playlistService.getDefaultFilter())\n\n    function handleChange({ target }) {\n        let { value, name: field, type } = target\n        value = (type === 'number') ? +value : value\n        setFilterByToEdit((prevFilter) => ({ ...prevFilter, [field]: value }))\n    }\n\n    function onSubmitFilter(ev) {\n        ev.preventDefault()\n        onSetFilter(filterByToEdit)\n    }\n\n    return <section className=\"playlist-filter\">\n        <form onSubmit={onSubmitFilter}>\n            <input className={title ? \"search-detail\" : \"\"} type=\"text\"\n                name=\"txt\"\n                placeholder={title || \"What do you want to listen to?\"}\n                value={filterByToEdit.txt}\n                onChange={handleChange}\n            />\n        </form>\n        <div className={title ? \"svg-container svg-detail\" : \"svg-container\"}>\n            <SearchSvg />\n        </div>\n    </section>\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,SAAS,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,WAAW;IAAEC;EAAM,CAAC,GAAAH,IAAA;EACjD,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAACC,eAAe,CAACW,gBAAgB,EAAE,CAAC;EAExF,SAASC,YAAYA,CAAAC,KAAA,EAAa;IAAA,IAAZ;MAAEC;IAAO,CAAC,GAAAD,KAAA;IAC5B,IAAI;MAAEE,KAAK;MAAEC,IAAI,EAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGJ,MAAM;IACzCC,KAAK,GAAIG,IAAI,KAAK,QAAQ,GAAI,CAACH,KAAK,GAAGA,KAAK;IAC5CL,iBAAiB,CAAES,UAAU,KAAM;MAAE,GAAGA,UAAU;MAAE,CAACF,KAAK,GAAGF;IAAM,CAAC,CAAC,CAAC;EAC1E;EAEA,SAASK,cAAcA,CAACC,EAAE,EAAE;IACxBA,EAAE,CAACC,cAAc,EAAE;IACnBf,WAAW,CAACE,cAAc,CAAC;EAC/B;EAEA,oBAAON,OAAA;IAASoB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBACvCrB,OAAA;MAAMsB,QAAQ,EAAEL,cAAe;MAAAI,QAAA,eAC3BrB,OAAA;QAAOoB,SAAS,EAAEf,KAAK,GAAG,eAAe,GAAG,EAAG;QAACU,IAAI,EAAC,MAAM;QACvDF,IAAI,EAAC,KAAK;QACVU,WAAW,EAAElB,KAAK,IAAI,gCAAiC;QACvDO,KAAK,EAAEN,cAAc,CAACkB,GAAI;QAC1BC,QAAQ,EAAEhB;MAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACzB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACP7B,OAAA;MAAKoB,SAAS,EAAEf,KAAK,GAAG,0BAA0B,GAAG,eAAgB;MAAAgB,QAAA,eACjErB,OAAA,CAACF,SAAS;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AACd;AAAC1B,EAAA,CA3BeF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}