{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/player-bar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING } from '../store/player.reducer';\n// import { SET_CURRENT_SONG, INCREMENT } from '../store/player.reducer';\n\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from \"./form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlayerBar() {\n  _s();\n  const [time, setTime] = useState(0);\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong);\n  const playerRef = useRef(null);\n  // console.log(\"playerRef\", playerRef)\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying);\n  // console.log(\"isPlaying playerbar\", isPlaying)\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     if (playerRef.current) return\n  //     if (playerRef.current !== null) {\n  //         if (!isPlaying) {\n  //             playerRef.current.pauseVideo();\n  //         } else {\n  //             playerRef.current.playVideo();\n  //         }\n  //     }\n  // }, [playerRef])\n\n  function handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    setTime(target.value);\n  }\n  const opts = {\n    height: '0',\n    width: '0',\n    playerVars: {\n      autoplay: 1,\n      controls: 0,\n      showinfo: 0,\n      rel: 0\n    }\n  };\n  const onReady = event => {\n    playerRef.current = event.target;\n  };\n  if (playerRef.current && !isPlaying) {\n    playerRef.current.pauseVideo();\n  }\n  if (playerRef.current && isPlaying) {\n    playerRef.current.playVideo();\n  }\n  const onPlayButtonClick = ev => {\n    const test = String(ev.target);\n    if (test.includes('SVG')) console.log(\"YES\");\n    if (!isPlaying && playerRef) {\n      playerRef.current.pauseVideo();\n    }\n    if (isPlaying && playerRef && test.includes('SVG')) {\n      playerRef.current.playVideo();\n    }\n    // setIsPlaying(!isPlaying);\n    dispatch({\n      type: ISPLAYING\n    }); // Dispatch action to update current song\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"player-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-control\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SkipBackBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPlayButtonClick,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fa-solid pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(PlayBtnBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), currentSong && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: currentSong.id || \"4m1EFMoRFvY\",\n        opts: opts,\n        onReady: onReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(SkipForwardBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RepeatBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"200\",\n          step: \"5\",\n          className: \"slider\",\n          value: time,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${time / 2}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"3:20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n}\n_s(PlayerBar, \"dtOQQIo1J2yi93xTwYzKbVPJavA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = PlayerBar;\nvar _c;\n$RefreshReg$(_c, \"PlayerBar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useDispatch","useSelector","YouTube","ISPLAYING","PlayBtnBar","RepeatBtn","ShuffleBtn","SkipBackBtn","SkipForwardBtn","jsxDEV","_jsxDEV","PlayerBar","_s","time","setTime","currentSong","storeState","playerModule","playerRef","isPlaying","dispatch","handleChange","_ref","target","value","opts","height","width","playerVars","autoplay","controls","showinfo","rel","onReady","event","current","pauseVideo","playVideo","onPlayButtonClick","ev","test","String","includes","console","log","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","videoId","id","min","max","step","onChange","style","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/player-bar.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING } from '../store/player.reducer';\n// import { SET_CURRENT_SONG, INCREMENT } from '../store/player.reducer';\n\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from \"./form\";\n\nexport function PlayerBar() {\n    const [time, setTime] = useState(0)\n    const currentSong = useSelector(storeState => storeState.playerModule.currentSong)\n\n    const playerRef = useRef(null);\n    // console.log(\"playerRef\", playerRef)\n    const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying)\n    // console.log(\"isPlaying playerbar\", isPlaying)\n    const dispatch = useDispatch()\n\n    // useEffect(() => {\n    //     if (playerRef.current) return\n    //     if (playerRef.current !== null) {\n    //         if (!isPlaying) {\n    //             playerRef.current.pauseVideo();\n    //         } else {\n    //             playerRef.current.playVideo();\n    //         }\n    //     }\n    // }, [playerRef])\n\n    function handleChange({ target }) {\n        setTime(target.value)\n    }\n\n    const opts = {\n        height: '0',\n        width: '0',\n        playerVars: {\n            autoplay: 1,\n            controls: 0,\n            showinfo: 0,\n            rel: 0,\n        },\n    }\n\n    const onReady = (event) => {\n        playerRef.current = event.target;\n    }\n    if (playerRef.current && !isPlaying) {\n        playerRef.current.pauseVideo();\n    }\n    if (playerRef.current && isPlaying) {\n        playerRef.current.playVideo();\n    }\n\n\n    const onPlayButtonClick = (ev) => {\n        const test = String(ev.target)\n        if (test.includes('SVG')) console.log(\"YES\")\n\n        if (!isPlaying && playerRef) {\n            playerRef.current.pauseVideo();\n        }\n        if (isPlaying && playerRef && test.includes('SVG')) {\n            playerRef.current.playVideo();\n        }\n        // setIsPlaying(!isPlaying);\n        dispatch({ type: ISPLAYING }); // Dispatch action to update current song\n    };\n\n\n    return <section className=\"player-bar\">\n        <div className=\"player-control\">\n            <ShuffleBtn />\n            <SkipBackBtn />\n\n            <button onClick={onPlayButtonClick}>\n                {isPlaying ? <span className='fa-solid pause'></span> : <PlayBtnBar />}\n            </button>\n            {currentSong && <YouTube videoId={currentSong.id || \"4m1EFMoRFvY\"} opts={opts} onReady={onReady} />}\n\n\n            {/* <PlayBtnBar /> */}\n\n            <SkipForwardBtn />\n            <RepeatBtn />\n        </div>\n        <div className=\"playback-bar\">\n            <small>0:00</small>\n            <div className=\"slider-container\">\n                <input type=\"range\"\n                    min=\"0\"\n                    max=\"200\"\n                    step=\"5\"\n                    className=\"slider\"\n                    value={time}\n                    onChange={handleChange} />\n                <div className=\"progress\" style={{ width: `${time / 2}%` }}></div>\n            </div>\n            <small>3:20</small>\n        </div>\n    </section>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}