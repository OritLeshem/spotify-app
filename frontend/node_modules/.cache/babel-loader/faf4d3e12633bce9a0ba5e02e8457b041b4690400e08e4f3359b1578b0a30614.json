{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/edit-modal.jsx\",\n  _s = $RefreshSig$();\nimport defaultPhoto from '../assets/imgs/add-pic.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { SET_PLAYLIST } from '../store/playlist.reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditModal(_ref) {\n  _s();\n  let {\n    onCloseEditModal\n  } = _ref;\n  const dispatch = useDispatch();\n  let playlist = useSelector(storeState => storeState.playlistModule.playlist);\n  const [playlistToEdit, setPlaylistToEdit] = useState(playlist);\n  function handleChange(_ref2) {\n    let {\n      target\n    } = _ref2;\n    let {\n      value,\n      type,\n      name: field\n    } = target;\n    value = type === 'number' ? +value : value;\n    setPlaylistToEdit(prev => ({\n      ...prev,\n      name: value\n    }));\n    console.log(playlistToEdit);\n  }\n  function onSubmit() {\n    dispatch({\n      type: SET_PLAYLIST,\n      playlist: playlistToEdit\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onCloseEditModal(),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      submit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-header-img-container \",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: defaultPhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-detail-header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-name-input\",\n          placeholder: \"your playlist name\",\n          type: \"text\",\n          name: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n_s(EditModal, \"+WI/ZAcf464QeyBi0R/y2rnb4tc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = EditModal;\nvar _c;\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"names":["defaultPhoto","useDispatch","useSelector","useState","SET_PLAYLIST","jsxDEV","_jsxDEV","EditModal","_ref","_s","onCloseEditModal","dispatch","playlist","storeState","playlistModule","playlistToEdit","setPlaylistToEdit","handleChange","_ref2","target","value","type","name","field","prev","console","log","onSubmit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","submit","src","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/edit-modal.jsx"],"sourcesContent":["import defaultPhoto from '../assets/imgs/add-pic.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { SET_PLAYLIST } from '../store/playlist.reducer';\n\nexport function EditModal({ onCloseEditModal }) {\n  const dispatch = useDispatch()\n  let playlist = useSelector(storeState => storeState.playlistModule.playlist)\n  const [playlistToEdit, setPlaylistToEdit] = useState(playlist)\n\n\n  function handleChange({ target }) {\n    let { value, type, name: field } = target\n    value = type === 'number' ? +value : value\n    setPlaylistToEdit((prev) => ({ ...prev, name: value }))\n    console.log(playlistToEdit)\n  }\n  function onSubmit() {\n    dispatch({ type: SET_PLAYLIST, playlist: playlistToEdit })\n  }\n  return <div className='edit-modal'>\n    <button onClick={() => onCloseEditModal()}>x</button>\n    <form submit={onSubmit}>\n      <div className='playlist-header-img-container '>\n        <img src={defaultPhoto} />\n      </div>\n\n      <div className='playlist-detail-header-info'>\n\n        <input\n          className=\"edit-name-input\"\n          placeholder='your playlist name'\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n\n\n        />\n\n        <button type=\"submit\">create</button>\n\n      </div>\n    </form>\n  </div >\n\n}\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,4BAA4B;AACrD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC;EAAiB,CAAC,GAAAF,IAAA;EAC5C,MAAMG,QAAQ,GAAGV,WAAW,EAAE;EAC9B,IAAIW,QAAQ,GAAGV,WAAW,CAACW,UAAU,IAAIA,UAAU,CAACC,cAAc,CAACF,QAAQ,CAAC;EAC5E,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAACS,QAAQ,CAAC;EAG9D,SAASK,YAAYA,CAAAC,KAAA,EAAa;IAAA,IAAZ;MAAEC;IAAO,CAAC,GAAAD,KAAA;IAC9B,IAAI;MAAEE,KAAK;MAAEC,IAAI;MAAEC,IAAI,EAAEC;IAAM,CAAC,GAAGJ,MAAM;IACzCC,KAAK,GAAGC,IAAI,KAAK,QAAQ,GAAG,CAACD,KAAK,GAAGA,KAAK;IAC1CJ,iBAAiB,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEF,IAAI,EAAEF;IAAM,CAAC,CAAC,CAAC;IACvDK,OAAO,CAACC,GAAG,CAACX,cAAc,CAAC;EAC7B;EACA,SAASY,QAAQA,CAAA,EAAG;IAClBhB,QAAQ,CAAC;MAAEU,IAAI,EAAEjB,YAAY;MAAEQ,QAAQ,EAAEG;IAAe,CAAC,CAAC;EAC5D;EACA,oBAAOT,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAChCvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,EAAG;MAAAmB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACrD5B,OAAA;MAAM6B,MAAM,EAAER,QAAS;MAAAE,QAAA,gBACrBvB,OAAA;QAAKsB,SAAS,EAAC,gCAAgC;QAAAC,QAAA,eAC7CvB,OAAA;UAAK8B,GAAG,EAAEpC;QAAa;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtB,eAEN5B,OAAA;QAAKsB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAE1CvB,OAAA;UACEsB,SAAS,EAAC,iBAAiB;UAC3BS,WAAW,EAAC,oBAAoB;UAChChB,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,MAAM;UACXgB,QAAQ,EAAErB;QAAa;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGvB,eAEF5B,OAAA;UAAQe,IAAI,EAAC,QAAQ;UAAAQ,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEjC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAET;AAACzB,EAAA,CAxCeF,SAAS;EAAA,QACNN,WAAW,EACbC,WAAW;AAAA;AAAAqC,EAAA,GAFZhC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}