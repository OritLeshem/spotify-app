{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { youtubeService } from \"../services/youtube.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PlaylistGenre() {\n  _s();\n  const {\n    genreName\n  } = useParams();\n  const [searchResults, setSearchResults] = useState(null);\n  useEffect(() => {\n    async function fetchVideoResults() {\n      const results = await youtubeService.getVideoResults(genreName);\n      setSearchResults(results);\n    }\n    fetchVideoResults();\n  }, [genreName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"    \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", genreName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this), searchResults && (searchResults === null || searchResults === void 0 ? void 0 : searchResults.map(result => result.title))]\n  }, void 0, true);\n}\n_s(PlaylistGenre, \"2NtP9DLAYfsXHdCJvo94JWc+g8E=\", false, function () {\n  return [useParams];\n});\n_c = PlaylistGenre;\nvar _c;\n$RefreshReg$(_c, \"PlaylistGenre\");","map":{"version":3,"names":["useEffect","useState","useParams","youtubeService","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaylistGenre","_s","genreName","searchResults","setSearchResults","fetchVideoResults","results","getVideoResults","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","title","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { youtubeService } from \"../services/youtube.service\"\n\nexport function PlaylistGenre() {\n  const { genreName } = useParams()\n  const [searchResults, setSearchResults] = useState(null)\n\n  useEffect(() => {\n    async function fetchVideoResults() {\n      const results = await youtubeService.getVideoResults(genreName)\n      setSearchResults(results)\n    }\n    fetchVideoResults()\n  }, [genreName])\n  return <>    <h3> {genreName}</h3>\n    {searchResults && searchResults?.map(result => result.title)}\n\n\n\n  </>\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5D,OAAO,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAU,CAAC,GAAGR,SAAS,EAAE;EACjC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,eAAea,iBAAiBA,CAAA,EAAG;MACjC,MAAMC,OAAO,GAAG,MAAMX,cAAc,CAACY,eAAe,CAACL,SAAS,CAAC;MAC/DE,gBAAgB,CAACE,OAAO,CAAC;IAC3B;IACAD,iBAAiB,EAAE;EACrB,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EACf,oBAAOL,OAAA,CAAAE,SAAA;IAAAS,QAAA,GAAE,MAAI,eAAAX,OAAA;MAAAW,QAAA,GAAI,GAAC,EAACN,SAAS;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAC/BT,aAAa,KAAIA,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEU,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,CAAC;EAAA,gBAI3D;AACL;AAACd,EAAA,CAjBeD,aAAa;EAAA,QACLN,SAAS;AAAA;AAAAsB,EAAA,GADjBhB,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}