{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-filter.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { playlistService } from '../services/playlist.service.local';\nimport { SearchSvg } from './form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlaylistFilter(_ref) {\n  _s();\n  let {\n    onSetFilter\n  } = _ref;\n  const [filterByToEdit, setFilterByToEdit] = useState(playlistService.getDefaultFilter());\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      onSetFilter(filterByToEdit);\n    }, 500); // Delay in milliseconds\n\n    return () => clearTimeout(debounce);\n  }, [filterByToEdit, onSetFilter]);\n  function handleChange(_ref2) {\n    let {\n      target\n    } = _ref2;\n    let {\n      value,\n      name: field,\n      type\n    } = target;\n    value = type === 'number' ? +value : value;\n    setFilterByToEdit(prevFilter => ({\n      ...prevFilter,\n      [field]: value\n    }));\n  }\n  function onSubmitFilter(ev) {\n    ev.preventDefault();\n    onSetFilter(filterByToEdit);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"playlist-filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitFilter,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"txt\",\n        placeholder: \"What do you want to listen to?\",\n        value: filterByToEdit.txt,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-container\",\n      children: /*#__PURE__*/_jsxDEV(SearchSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(PlaylistFilter, \"eExA/VDk+df9RlcgY7djHMleHnQ=\");\n_c = PlaylistFilter;\nvar _c;\n$RefreshReg$(_c, \"PlaylistFilter\");","map":{"version":3,"names":["useState","useEffect","playlistService","SearchSvg","jsxDEV","_jsxDEV","PlaylistFilter","_ref","_s","onSetFilter","filterByToEdit","setFilterByToEdit","getDefaultFilter","debounce","setTimeout","clearTimeout","handleChange","_ref2","target","value","name","field","type","prevFilter","onSubmitFilter","ev","preventDefault","className","children","onSubmit","placeholder","txt","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-filter.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { playlistService } from '../services/playlist.service.local';\nimport { SearchSvg } from './form';\n\nexport function PlaylistFilter({ onSetFilter }) {\n    const [filterByToEdit, setFilterByToEdit] = useState(playlistService.getDefaultFilter());\n\n    useEffect(() => {\n        const debounce = setTimeout(() => {\n            onSetFilter(filterByToEdit);\n        }, 500); // Delay in milliseconds\n\n        return () => clearTimeout(debounce);\n    }, [filterByToEdit, onSetFilter]);\n\n    function handleChange({ target }) {\n        let { value, name: field, type } = target;\n        value = type === 'number' ? +value : value;\n        setFilterByToEdit((prevFilter) => ({ ...prevFilter, [field]: value }));\n    }\n\n    function onSubmitFilter(ev) {\n        ev.preventDefault();\n        onSetFilter(filterByToEdit);\n    }\n\n    return (\n        <section className=\"playlist-filter\">\n            <form onSubmit={onSubmitFilter}>\n                <input\n                    type=\"text\"\n                    name=\"txt\"\n                    placeholder=\"What do you want to listen to?\"\n                    value={filterByToEdit.txt}\n                    onChange={handleChange}\n                />\n                {/* <button>Search</button> */}\n            </form>\n            <div className=\"svg-container\">\n                <SearchSvg />\n            </div>\n        </section>\n    );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,SAASC,cAAcA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC1C,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAACE,eAAe,CAACU,gBAAgB,EAAE,CAAC;EAExFX,SAAS,CAAC,MAAM;IACZ,MAAMY,QAAQ,GAAGC,UAAU,CAAC,MAAM;MAC9BL,WAAW,CAACC,cAAc,CAAC;IAC/B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMK,YAAY,CAACF,QAAQ,CAAC;EACvC,CAAC,EAAE,CAACH,cAAc,EAAED,WAAW,CAAC,CAAC;EAEjC,SAASO,YAAYA,CAAAC,KAAA,EAAa;IAAA,IAAZ;MAAEC;IAAO,CAAC,GAAAD,KAAA;IAC5B,IAAI;MAAEE,KAAK;MAAEC,IAAI,EAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGJ,MAAM;IACzCC,KAAK,GAAGG,IAAI,KAAK,QAAQ,GAAG,CAACH,KAAK,GAAGA,KAAK;IAC1CR,iBAAiB,CAAEY,UAAU,KAAM;MAAE,GAAGA,UAAU;MAAE,CAACF,KAAK,GAAGF;IAAM,CAAC,CAAC,CAAC;EAC1E;EAEA,SAASK,cAAcA,CAACC,EAAE,EAAE;IACxBA,EAAE,CAACC,cAAc,EAAE;IACnBjB,WAAW,CAACC,cAAc,CAAC;EAC/B;EAEA,oBACIL,OAAA;IAASsB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAChCvB,OAAA;MAAMwB,QAAQ,EAAEL,cAAe;MAAAI,QAAA,eAC3BvB,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXF,IAAI,EAAC,KAAK;QACVU,WAAW,EAAC,gCAAgC;QAC5CX,KAAK,EAAET,cAAc,CAACqB,GAAI;QAC1BC,QAAQ,EAAEhB;MAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACzB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEC,eACP/B,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BvB,OAAA,CAACF,SAAS;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAElB;AAAC5B,EAAA,CAvCeF,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}