{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/player-bar.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer';\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from \"./form\";\nimport { youtubeService } from '../services/youtube.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst opts = {\n  height: '0',\n  width: '0',\n  playerVars: {\n    autoplay: 0,\n    controls: 0,\n    showinfo: 0,\n    rel: 0\n  }\n};\nexport function PlayerBar() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const progressPercentage = currentTime / duration * 100;\n  useEffect(() => {\n    async function fetchVideoDetails() {\n      const videoId = 'Q4VK9_CfOLQ'; // Replace with the desired video ID\n      const videoDetails = await youtubeService(videoId);\n      const isoDuration = videoDetails.data.items[0].contentDetails.duration;\n      const durationInSeconds = formatDurationToSeconds(isoDuration);\n      setDuration(durationInSeconds);\n    }\n    fetchVideoDetails();\n  }, []);\n  function formatDuration(isoDuration) {\n    const regex = /^PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?$/;\n    const matches = isoDuration.match(regex);\n    const hours = parseInt(matches[1]) || 0;\n    const minutes = parseInt(matches[2]) || 0;\n    const seconds = parseInt(matches[3]) || 0;\n    const totalMinutes = hours * 60 + minutes;\n    const formattedMinutes = totalMinutes.toString().padStart(2, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n  function formatDurationToSeconds(isoDuration) {\n    const regex = /^PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?$/;\n    const matches = isoDuration.match(regex);\n    const hours = parseInt(matches[1]) || 0;\n    const minutes = parseInt(matches[2]) || 0;\n    const seconds = parseInt(matches[3]) || 0;\n    return hours * 3600 + minutes * 60 + seconds;\n  }\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong);\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying);\n  const playSongs = useSelector(storeState => storeState.playlistModule.playSongs);\n  const playerRef = useRef(null);\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n  function handleChange(event) {\n    setCurrentTime(event.target.value);\n  }\n  function onReady(event) {\n    setTimeout(() => {\n      playerRef.current = event.target;\n      if (isPlaying) {\n        playerRef.current.playVideo();\n      }\n      if (playerRef.current && isPlaying) {\n        playerRef.current.playVideo();\n      }\n    }, 500);\n  }\n  if (playerRef.current && !isPlaying) {\n    playerRef.current.pauseVideo();\n  }\n  if (playerRef.current && isPlaying) {\n    playerRef.current.playVideo();\n  }\n  const onPlayButtonClick = ev => {\n    const test = String(ev.target);\n    if (!isPlaying && playerRef) {\n      playerRef.current.pauseVideo();\n    }\n    if (isPlaying && playerRef && test.includes('Span')) {\n      playerRef.current.playVideo();\n    }\n    dispatch({\n      type: ISPLAYING\n    });\n  };\n  function handleNextSong() {\n    console.log(\"currentSong\", currentSong);\n    const currIndex = playSongs.indexOf(currentSong);\n    if (currIndex === playSongs.length - 1) dispatch({\n      type: SET_CURRENT_SONG,\n      song: playSongs[0]\n    });else dispatch({\n      type: SET_CURRENT_SONG,\n      song: playSongs[currIndex + 1]\n    });\n    console.log(\"currIndex\", currIndex);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"player-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-control\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SkipBackBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPlayButtonClick,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fa-solid pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(PlayBtnBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), currentSong && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: currentSong.id || \"4m1EFMoRFvY\",\n        opts: opts,\n        onReady: onReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextSong,\n        children: [\" \", /*#__PURE__*/_jsxDEV(SkipForwardBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RepeatBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration,\n          step: \"1\",\n          className: \"slider\",\n          value: currentTime,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${progressPercentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: formatDuration(`PT${duration}S`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 12\n  }, this);\n}\n_s(PlayerBar, \"m+luBHWL0gR3Wa9z1bNsZ2ZHsWA=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = PlayerBar;\nvar _c;\n$RefreshReg$(_c, \"PlayerBar\");","map":{"version":3,"names":["useEffect","useState","useRef","axios","useDispatch","useSelector","YouTube","ISPLAYING","SET_CURRENT_SONG","PlayBtnBar","RepeatBtn","ShuffleBtn","SkipBackBtn","SkipForwardBtn","youtubeService","jsxDEV","_jsxDEV","opts","height","width","playerVars","autoplay","controls","showinfo","rel","PlayerBar","_s","currentTime","setCurrentTime","duration","setDuration","progressPercentage","fetchVideoDetails","videoId","videoDetails","isoDuration","data","items","contentDetails","durationInSeconds","formatDurationToSeconds","formatDuration","regex","matches","match","hours","parseInt","minutes","seconds","totalMinutes","formattedMinutes","toString","padStart","formattedSeconds","currentSong","storeState","playerModule","isPlaying","playSongs","playlistModule","playerRef","time","setTime","dispatch","handleChange","event","target","value","onReady","setTimeout","current","playVideo","pauseVideo","onPlayButtonClick","ev","test","String","includes","type","handleNextSong","console","log","currIndex","indexOf","length","song","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","min","max","step","onChange","style","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/player-bar.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react'\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer';\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from \"./form\";\nimport { youtubeService } from '../services/youtube.service';\n\n\n\nconst opts = {\n    height: '0',\n    width: '0',\n    playerVars: {\n        autoplay: 0,\n        controls: 0,\n        showinfo: 0,\n        rel: 0,\n    },\n}\n\nexport function PlayerBar() {\n\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const progressPercentage = (currentTime / duration) * 100;\n\n\n    useEffect(() => {\n        async function fetchVideoDetails() {\n            const videoId = 'Q4VK9_CfOLQ'; // Replace with the desired video ID\n            const videoDetails = await youtubeService(videoId);\n            const isoDuration = videoDetails.data.items[0].contentDetails.duration;\n            const durationInSeconds = formatDurationToSeconds(isoDuration);\n            setDuration(durationInSeconds);\n        }\n\n        fetchVideoDetails();\n    }, []);\n    function formatDuration(isoDuration) {\n        const regex = /^PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?$/;\n        const matches = isoDuration.match(regex);\n\n        const hours = parseInt(matches[1]) || 0;\n        const minutes = parseInt(matches[2]) || 0;\n        const seconds = parseInt(matches[3]) || 0;\n\n        const totalMinutes = (hours * 60) + minutes;\n        const formattedMinutes = totalMinutes.toString().padStart(2, '0');\n        const formattedSeconds = seconds.toString().padStart(2, '0');\n\n        return `${formattedMinutes}:${formattedSeconds}`;\n    }\n\n    function formatDurationToSeconds(isoDuration) {\n        const regex = /^PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?$/;\n        const matches = isoDuration.match(regex);\n\n        const hours = parseInt(matches[1]) || 0;\n        const minutes = parseInt(matches[2]) || 0;\n        const seconds = parseInt(matches[3]) || 0;\n\n        return (hours * 3600) + (minutes * 60) + seconds;\n    }\n\n\n    const currentSong = useSelector(storeState => storeState.playerModule.currentSong)\n    const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying)\n    const playSongs = useSelector(storeState => storeState.playlistModule.playSongs)\n    const playerRef = useRef(null)\n    const [time, setTime] = useState(0)\n    const dispatch = useDispatch()\n\n    function handleChange(event) {\n        setCurrentTime(event.target.value);\n    }\n\n\n\n    function onReady(event) {\n        setTimeout(() => {\n            playerRef.current = event.target;\n            if (isPlaying) {\n                playerRef.current.playVideo()\n            }\n            if (playerRef.current && isPlaying) {\n                playerRef.current.playVideo()\n            }\n        }, 500)\n\n\n    }\n\n    if (playerRef.current && !isPlaying) {\n        playerRef.current.pauseVideo()\n    }\n\n    if (playerRef.current && isPlaying) {\n        playerRef.current.playVideo()\n    }\n\n    const onPlayButtonClick = (ev) => {\n        const test = String(ev.target)\n        if (!isPlaying && playerRef) {\n            playerRef.current.pauseVideo()\n        }\n        if (isPlaying && playerRef && test.includes('Span')) {\n            playerRef.current.playVideo()\n        }\n        dispatch({ type: ISPLAYING })\n    }\n    function handleNextSong() {\n        console.log(\"currentSong\", currentSong)\n        const currIndex = playSongs.indexOf(currentSong)\n        if (currIndex === playSongs.length - 1) dispatch({ type: SET_CURRENT_SONG, song: playSongs[0] })\n        else dispatch({ type: SET_CURRENT_SONG, song: playSongs[currIndex + 1] })\n        console.log(\"currIndex\", currIndex)\n    }\n\n    return <section className=\"player-bar\">\n        <div className=\"player-control\">\n            <ShuffleBtn />\n            <SkipBackBtn />\n            <button onClick={onPlayButtonClick}>\n                {isPlaying ? <span className='fa-solid pause'></span> : <PlayBtnBar />}\n            </button>\n            {currentSong && <YouTube videoId={currentSong.id || \"4m1EFMoRFvY\"} opts={opts} onReady={onReady} />}\n            {/* <PlayBtnBar /> */}\n            <button onClick={handleNextSong}> <SkipForwardBtn /></button>\n            {/* <SkipForwardBtn /> */}\n            <RepeatBtn />\n        </div>\n        <div className=\"playback-bar\">\n            <small>0:00</small>\n            <div className=\"slider-container\">\n                <input type=\"range\"\n                    min=\"0\"\n                    max={duration}\n                    step=\"1\"\n                    className=\"slider\"\n                    value={currentTime}\n                    onChange={handleChange} />\n                <div className=\"progress\" style={{ width: `${progressPercentage}%` }}></div>\n            </div>\n            <small>{formatDuration(`PT${duration}S`)}</small>\n        </div>\n    </section>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}