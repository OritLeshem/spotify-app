{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { youtubeService } from \"../services/youtube.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PlaylistGenre() {\n  _s();\n  const {\n    genreName\n  } = useParams();\n  let [searchResults, setSearchResults] = useState(null);\n  useEffect(() => {\n    searchResults = youtubeService.getVideoResults(genreName);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"    \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"hello genre \", genreName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"playlist-detail-result-list\",\n      children: searchResults.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"song\",\n        onClick: () => handleSong(song.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headline-table-col table-num\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headline-table-col song-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-img-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.imgUrl,\n              alt: \"song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Music, {\n              handlePlayPauseClick: handlePlayPauseClick,\n              song: song,\n              songId: song.id || '4m1EFMoRFvY'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cover-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-info\",\n            children: [!isMobile ? /*#__PURE__*/_jsxDEV(\"small\", {\n              title: song.title,\n              children: [song.title.slice(song.title.indexOf('-' || ':') + 2, song.title.length + 1).slice(0, 30), song.title.length > 30 && \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 26\n            }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n              title: song.title,\n              children: [song.title.slice(song.title.indexOf('-' || ':') + 2, song.title.length + 1).slice(0, 15), song.title.length > 15 && \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 188\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: song.title.substring(0, song.title.indexOf(\"-\" || \":\"))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"song-artist-name\",\n          children: song.title.substring(0, song.title.indexOf(\"-\" || \":\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          onClick: () => {\n            onAddSongTpPlayList(song);\n          },\n          className: \"fa-regular plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"song-time\",\n          children: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 85\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(PlaylistGenre, \"2NtP9DLAYfsXHdCJvo94JWc+g8E=\", false, function () {\n  return [useParams];\n});\n_c = PlaylistGenre;\nvar _c;\n$RefreshReg$(_c, \"PlaylistGenre\");","map":{"version":3,"names":["useEffect","useState","useParams","youtubeService","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaylistGenre","_s","genreName","searchResults","setSearchResults","getVideoResults","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","song","index","onClick","handleSong","id","src","imgUrl","alt","Music","handlePlayPauseClick","songId","isMobile","title","slice","indexOf","length","substring","onAddSongTpPlayList","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { youtubeService } from \"../services/youtube.service\"\n\nexport function PlaylistGenre() {\n  const { genreName } = useParams()\n  let [searchResults, setSearchResults] = useState(null)\n  useEffect(() => {\n    searchResults = youtubeService.getVideoResults(genreName)\n  }, [])\n  return <>    <h1>hello genre {genreName}</h1>\n    <ul className='playlist-detail-result-list'>{searchResults.map((song, index) => <li key={song.id} className='song' onClick={() => handleSong(song.id)}  >\n      <div className=\"headline-table-col table-num\">{index + 1}\n      </div>\n      <div className=\"headline-table-col song-detail\">\n        <div className=\"table-img-container\">\n          <img src={song.imgUrl} alt=\"song\" />\n          <Music handlePlayPauseClick={handlePlayPauseClick} song={song} songId={song.id || '4m1EFMoRFvY'} />\n        </div>\n        <div className=\"cover-container\"></div>\n        <div className='song-info'>\n          {(!isMobile) ? <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 30)}{song.title.length > 30 && \"...\"}</small> : <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 15)}{song.title.length > 15 && \"...\"}</small>}\n          <small>{song.title.substring(0, song.title.indexOf(\"-\" || \":\"))}</small>\n        </div>\n      </div>\n      <small className='song-artist-name'>{song.title.substring(0, song.title.indexOf(\"-\" || \":\"))}</small>\n      <small onClick={() => { onAddSongTpPlayList(song) }} className='fa-regular plus'></small>\n      <small className='song-time'>time</small>\n    </li>)}\n    </ul>\n\n\n\n  </>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}