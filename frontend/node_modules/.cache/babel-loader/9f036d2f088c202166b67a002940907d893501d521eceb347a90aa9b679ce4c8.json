{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/test2.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer';\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from './form';\nimport { youtubeService } from '../services/youtube.service';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst opts = {\n  height: '0',\n  width: '0',\n  playerVars: {\n    autoplay: 0,\n    controls: 0,\n    showinfo: 0,\n    rel: 0\n  }\n};\nexport function PlayerBar() {\n  _s();\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong);\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying);\n  const playSongs = useSelector(storeState => storeState.playlistModule.playSongs);\n  const playerRef = useRef(null);\n  const [time, setTime] = useState(0);\n  const [userTime, setUserTime] = useState(0);\n  const dispatch = useDispatch();\n  const [showTime, setShowTime] = useState('00:00');\n  const [duration, setDuration] = useState();\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime < duration) {\n            return prevTime + 1;\n          }\n          return 0;\n        });\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [isPlaying, duration]);\n\n  // useEffect(() => {\n  //   if (currentSong) {\n  //     async function fetchVideoDuration() {\n  //       console.log('Video ID:', currentSong.id);\n\n  //       try {\n  //         const durationResponse = await youtubeService.getTimeOfSong(currentSong._id);\n  //         setShowTime(youtubeService.formatDuration(durationResponse));\n  //         setDuration(youtubeService.convertDurationToSeconds(durationResponse));\n  //       } catch (err) {\n  //         console.error(\"Error fetching song duration:\", err);\n  //       }\n  //     }\n\n  //     fetchVideoDuration();\n  //   }\n  // }, [currentSong]);\n\n  useEffect(() => {\n    if (currentSong) {\n      console.log('Video ID:', currentSong.id);\n      const res = axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${currentSong.id}&part=contentDetails&key=AIzaSyDbYtw99FWbtr4RCHxS0dxtj3--vXfSp4E`);\n      const videoDuration = res.data.items[0].contentDetails.duration;\n      const min = videoDuration.slice(2, videoDuration.indexOf('M'));\n      let sec = videoDuration.slice(videoDuration.indexOf('M') + 1, videoDuration.indexOf('S'));\n      sec = sec.padStart(2, '0');\n      const duration = `${min}:${sec}`;\n      return duration.then(res => {\n        console.log(res);\n        setShowTime(youtubeService.formatDuration(res));\n        setDuration(youtubeService.convertDurationToSeconds(res));\n      }).catch(err => console.error(\"Error fetching song duration:\", err));\n    }\n  }, [currentSong]);\n  async function getSongDuration(songId) {\n    const res = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${currentSong.id}&part=contentDetails&key=AIzaSyB78sQnIs2jGHmBAwiuGLKbt9d9kpLGkU4`);\n    const videoDuration = res.data.items[0].contentDetails.duration;\n    const min = videoDuration.slice(2, videoDuration.indexOf('M'));\n    let sec = videoDuration.slice(videoDuration.indexOf('M') + 1, videoDuration.indexOf('S'));\n    sec = sec.padStart(2, '0');\n    const duration = `${min}:${sec}`;\n    return duration;\n  }\n  useEffect(() => {\n    if (playerRef.current) {\n      if (isPlaying) {\n        playerRef.current.playVideo();\n      } else {\n        playerRef.current.pauseVideo();\n      }\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    const updateCurrentTime = () => {\n      if (playerRef.current && isPlaying) {\n        setTime(Math.round(playerRef.current.getCurrentTime()));\n      }\n    };\n    const interval = setInterval(updateCurrentTime, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [playerRef, isPlaying]);\n  const handleChange = event => {\n    setUserTime(parseInt(event.target.value, 10));\n  };\n  const handleRangeInputEnd = () => {\n    setTime(userTime);\n    if (playerRef.current) {\n      playerRef.current.seekTo(userTime);\n    }\n  };\n  function onReady(event) {\n    setTimeout(() => {\n      playerRef.current = event.target;\n      if (isPlaying) {\n        playerRef.current.playVideo();\n      }\n    }, 500);\n  }\n  const onPlayButtonClick = ev => {\n    dispatch({\n      type: ISPLAYING\n    });\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  function handleNextSong() {\n    console.log('currentSong', currentSong);\n    const currIndex = playSongs.indexOf(currentSong);\n    if (currIndex === playSongs.length - 1) {\n      dispatch({\n        type: SET_CURRENT_SONG,\n        song: playSongs[0]\n      });\n    } else {\n      dispatch({\n        type: SET_CURRENT_SONG,\n        song: playSongs[currIndex + 1]\n      });\n    }\n    console.log('currIndex', currIndex);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"player-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-control\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SkipBackBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPlayButtonClick,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fa-solid pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(PlayBtnBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), currentSong && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: currentSong.id || '4m1EFMoRFvY',\n        opts: opts,\n        onReady: onReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextSong,\n        children: [' ', /*#__PURE__*/_jsxDEV(SkipForwardBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RepeatBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"400\",\n          step: \"1\",\n          className: \"slider\",\n          value: userTime !== 0 ? userTime : time,\n          onChange: handleChange,\n          onMouseUp: handleRangeInputEnd,\n          onTouchEnd: handleRangeInputEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${time / 2}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: showTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerBar, \"e9vNXdaB99GUy4LkYxQCIF2d+jA=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = PlayerBar;\nvar _c;\n$RefreshReg$(_c, \"PlayerBar\");","map":{"version":3,"names":["useEffect","useState","useRef","useDispatch","useSelector","YouTube","ISPLAYING","SET_CURRENT_SONG","PlayBtnBar","RepeatBtn","ShuffleBtn","SkipBackBtn","SkipForwardBtn","youtubeService","axios","jsxDEV","_jsxDEV","opts","height","width","playerVars","autoplay","controls","showinfo","rel","PlayerBar","_s","currentSong","storeState","playerModule","isPlaying","playSongs","playlistModule","playerRef","time","setTime","userTime","setUserTime","dispatch","showTime","setShowTime","duration","setDuration","timer","setInterval","prevTime","clearInterval","console","log","id","res","get","videoDuration","data","items","contentDetails","min","slice","indexOf","sec","padStart","then","formatDuration","convertDurationToSeconds","catch","err","error","getSongDuration","songId","current","playVideo","pauseVideo","updateCurrentTime","Math","round","getCurrentTime","interval","handleChange","event","parseInt","target","value","handleRangeInputEnd","seekTo","onReady","setTimeout","onPlayButtonClick","ev","type","formatTime","seconds","minutes","floor","remainingSeconds","toString","handleNextSong","currIndex","length","song","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","videoId","max","step","onChange","onMouseUp","onTouchEnd","style","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/test2.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer';\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from './form';\nimport { youtubeService } from '../services/youtube.service';\nimport axios from 'axios';\nconst opts = {\n  height: '0',\n  width: '0',\n  playerVars: {\n    autoplay: 0,\n    controls: 0,\n    showinfo: 0,\n    rel: 0,\n  },\n};\n\nexport function PlayerBar() {\n  const currentSong = useSelector((storeState) => storeState.playerModule.currentSong);\n  const isPlaying = useSelector((storeState) => storeState.playerModule.isPlaying);\n  const playSongs = useSelector((storeState) => storeState.playlistModule.playSongs);\n  const playerRef = useRef(null);\n  const [time, setTime] = useState(0);\n  const [userTime, setUserTime] = useState(0);\n  const dispatch = useDispatch();\n  const [showTime, setShowTime] = useState('00:00');\n  const [duration, setDuration] = useState();\n\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime < duration) {\n            return prevTime + 1;\n          }\n          return 0;\n        });\n      }, 1000);\n\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [isPlaying, duration]);\n\n  // useEffect(() => {\n  //   if (currentSong) {\n  //     async function fetchVideoDuration() {\n  //       console.log('Video ID:', currentSong.id);\n\n  //       try {\n  //         const durationResponse = await youtubeService.getTimeOfSong(currentSong._id);\n  //         setShowTime(youtubeService.formatDuration(durationResponse));\n  //         setDuration(youtubeService.convertDurationToSeconds(durationResponse));\n  //       } catch (err) {\n  //         console.error(\"Error fetching song duration:\", err);\n  //       }\n  //     }\n\n  //     fetchVideoDuration();\n  //   }\n  // }, [currentSong]);\n\n  useEffect(() => {\n    if (currentSong) {\n\n      console.log('Video ID:', currentSong.id);\n      const res = axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${currentSong.id}&part=contentDetails&key=AIzaSyDbYtw99FWbtr4RCHxS0dxtj3--vXfSp4E`)\n      const videoDuration = res.data.items[0].contentDetails.duration\n      const min = videoDuration.slice(2, videoDuration.indexOf('M'))\n      let sec = videoDuration.slice(videoDuration.indexOf('M') + 1, videoDuration.indexOf('S'))\n      sec = sec.padStart(2, '0')\n      const duration = `${min}:${sec}`\n      return duration\n        .then(res => {\n          console.log(res)\n          setShowTime(youtubeService.formatDuration(res));\n          setDuration(youtubeService.convertDurationToSeconds(res));\n        })\n\n        .catch((err) => console.error(\"Error fetching song duration:\", err))\n\n\n    }\n  }, [currentSong]);\n  async function getSongDuration(songId) {\n    const res = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${currentSong.id}&part=contentDetails&key=AIzaSyB78sQnIs2jGHmBAwiuGLKbt9d9kpLGkU4`)\n    const videoDuration = res.data.items[0].contentDetails.duration\n    const min = videoDuration.slice(2, videoDuration.indexOf('M'))\n    let sec = videoDuration.slice(videoDuration.indexOf('M') + 1, videoDuration.indexOf('S'))\n    sec = sec.padStart(2, '0')\n    const duration = `${min}:${sec}`\n    return duration\n  }\n  useEffect(() => {\n    if (playerRef.current) {\n      if (isPlaying) {\n        playerRef.current.playVideo();\n      } else {\n        playerRef.current.pauseVideo();\n      }\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    const updateCurrentTime = () => {\n      if (playerRef.current && isPlaying) {\n        setTime(Math.round(playerRef.current.getCurrentTime()));\n      }\n    };\n\n    const interval = setInterval(updateCurrentTime, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [playerRef, isPlaying]);\n\n  const handleChange = (event) => {\n    setUserTime(parseInt(event.target.value, 10));\n  };\n\n  const handleRangeInputEnd = () => {\n    setTime(userTime);\n    if (playerRef.current) {\n      playerRef.current.seekTo(userTime);\n    }\n  };\n\n  function onReady(event) {\n    setTimeout(() => {\n      playerRef.current = event.target;\n      if (isPlaying) {\n        playerRef.current.playVideo();\n      }\n    }, 500);\n  }\n\n  const onPlayButtonClick = (ev) => {\n    dispatch({ type: ISPLAYING });\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  function handleNextSong() {\n    console.log('currentSong', currentSong);\n    const currIndex = playSongs.indexOf(currentSong);\n    if (currIndex === playSongs.length - 1) {\n      dispatch({ type: SET_CURRENT_SONG, song: playSongs[0] });\n    } else {\n      dispatch({ type: SET_CURRENT_SONG, song: playSongs[currIndex + 1] });\n    }\n    console.log('currIndex', currIndex);\n  }\n\n  return (\n    <section className=\"player-bar\">\n      <div className=\"player-control\">\n        <ShuffleBtn />\n        <SkipBackBtn />\n        <button onClick={onPlayButtonClick}>\n          {isPlaying ? <span className=\"fa-solid pause\"></span> : <PlayBtnBar />}\n        </button>\n        {currentSong && (\n          <YouTube videoId={currentSong.id || '4m1EFMoRFvY'} opts={opts} onReady={onReady} />\n        )}\n        <button onClick={handleNextSong}>\n          {' '}\n          <SkipForwardBtn />\n        </button>\n        <RepeatBtn />\n      </div>\n      <div className=\"playback-bar\">\n        <small>{formatTime(time)}</small>\n        <div className=\"slider-container\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"400\"\n            step=\"1\"\n            className=\"slider\"\n            value={userTime !== 0 ? userTime : time}\n            onChange={handleChange}\n            onMouseUp={handleRangeInputEnd}\n            onTouchEnd={handleRangeInputEnd}\n          />\n          <div className=\"progress\" style={{ width: `${time / 2}%` }}></div>\n        </div>\n        <small>{showTime}</small>\n      </div>\n    </section>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}