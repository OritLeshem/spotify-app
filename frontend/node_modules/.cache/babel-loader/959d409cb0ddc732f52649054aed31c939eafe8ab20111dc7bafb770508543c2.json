{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-edit.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { AiFillClockCircle } from \"react-icons/ai\";\nimport defaultPhoto from '../assets/imgs/add-pic.png';\nimport { playlistService } from '../services/playlist.service.local';\nimport { showErrorMsg, showSuccessMsg } from '../services/event-bus.service';\nimport { utilService } from '../services/util.service';\nimport { addSonfToPlaylist, loadPlaylist, loadPlaylists, removeSongFromPlayList, savePlaylist, updatePlaylist } from '../store/playlist.actions';\nimport { SET_PLAYLIST } from '../store/playlist.reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadService } from '../services/upload.service';\nimport { loadUser } from '../store/user/user.actions';\nimport { userService } from '../services/user.service.local';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlaylistEdit() {\n  _s();\n  const [playlistToEdit, setPlaylistToEdit] = useState(playlistService.getEmptyPlaylist());\n  // console.log(playlistToEdit.imgUrl === defaultPhoto)\n  const loggedInUser = useSelector(storeState => storeState.user);\n  console.log(loggedInUser);\n  const playlists = useSelector(storeState => storeState.playlists);\n  const playlist = useSelector(storeState => storeState.playlistModule.playlist);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [imgUrl, setImgUrl] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: SET_PLAYLIST,\n      playlist: null\n    });\n    userService.getLoggedInUser();\n    if (playlist) loadPlaylist(playlist);\n  }, [imgUrl]);\n  useEffect(() => {\n    if (playlist) loadPlaylists('');\n  }, [playlist]);\n  useEffect(() => {\n    function handleResize() {\n      // console.log(window.innerWidth < 960)\n      if (window.innerWidth < 700) setIsMobile(true);\n      if (window.innerWidth > 700) setIsMobile(false);\n    }\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  function handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    let {\n      value,\n      type,\n      name: field\n    } = target;\n    value = type === 'number' ? +value : value;\n    setPlaylistToEdit(prev => ({\n      ...prev,\n      [field]: value,\n      createdBy: loggedInUser\n    }));\n  }\n  async function onSavePlaylist(ev) {\n    ev.preventDefault();\n    setIsEditing(false);\n    try {\n      const playlist = await savePlaylist(playlistToEdit);\n      showSuccessMsg('saved Playlist!');\n      dispatch({\n        type: SET_PLAYLIST,\n        playlist\n      });\n      console.log(imgUrl === defaultPhoto, imgUrl, defaultPhoto);\n      navigate(`/detail/${playlist._id}`);\n    } catch (err) {\n      console.log('err', err);\n      showErrorMsg('Cannot save playlist');\n    }\n  }\n  async function onUploadImg(ev) {\n    try {\n      const newImgUrl = await uploadService.uploadImg(ev);\n      setPlaylistToEdit(prev => ({\n        ...prev,\n        imgUrl: newImgUrl\n      }));\n      setImgUrl(newImgUrl);\n      showSuccessMsg('saved img!');\n    } catch (err) {\n      console.log('err:', err);\n    }\n  }\n  const onEditImgClick = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    input.addEventListener('change', onUploadImg);\n    input.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main-page playlist-details\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-detail-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-header-img-container \",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: onEditImgClick,\n          src: playlistToEdit.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-detail-header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-detail-header-title-detail\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          onClick: () => setIsEditing(true),\n          className: \"playlist-detail-header-title\",\n          children: playlistToEdit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSavePlaylist,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"playlist-detail-header-title-input\",\n            id: \"name\",\n            placeholder: \"playlist name...\"\n            // value={playlistToEdit.name}\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onMouseDown: onSavePlaylist,\n            type: \"submit\",\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_s(PlaylistEdit, \"ts2TD6OPVkk3MlY/q+26hVuT76o=\", false, function () {\n  return [useSelector, useSelector, useSelector, useNavigate, useDispatch];\n});\n_c = PlaylistEdit;\nvar _c;\n$RefreshReg$(_c, \"PlaylistEdit\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","AiFillClockCircle","defaultPhoto","playlistService","showErrorMsg","showSuccessMsg","utilService","addSonfToPlaylist","loadPlaylist","loadPlaylists","removeSongFromPlayList","savePlaylist","updatePlaylist","SET_PLAYLIST","useDispatch","useSelector","uploadService","loadUser","userService","jsxDEV","_jsxDEV","PlaylistEdit","_s","playlistToEdit","setPlaylistToEdit","getEmptyPlaylist","loggedInUser","storeState","user","console","log","playlists","playlist","playlistModule","isMobile","setIsMobile","isEditing","setIsEditing","imgUrl","setImgUrl","navigate","dispatch","type","getLoggedInUser","handleResize","window","innerWidth","addEventListener","removeEventListener","handleChange","_ref","target","value","name","field","prev","createdBy","onSavePlaylist","ev","preventDefault","_id","err","onUploadImg","newImgUrl","uploadImg","onEditImgClick","input","document","createElement","accept","click","className","children","onClick","src","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","placeholder","onChange","onMouseDown","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-edit.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { AiFillClockCircle } from \"react-icons/ai\";\nimport defaultPhoto from '../assets/imgs/add-pic.png'\n\n\nimport { playlistService } from '../services/playlist.service.local'\nimport { showErrorMsg, showSuccessMsg } from '../services/event-bus.service'\nimport { utilService } from '../services/util.service';\nimport { addSonfToPlaylist, loadPlaylist, loadPlaylists, removeSongFromPlayList, savePlaylist, updatePlaylist } from '../store/playlist.actions';\nimport { SET_PLAYLIST } from '../store/playlist.reducer'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadService } from '../services/upload.service';\nimport { loadUser } from '../store/user/user.actions';\nimport { userService } from '../services/user.service.local'\n\n\nexport function PlaylistEdit() {\n  const [playlistToEdit, setPlaylistToEdit] = useState(playlistService.getEmptyPlaylist())\n  // console.log(playlistToEdit.imgUrl === defaultPhoto)\n  const loggedInUser = useSelector(storeState => storeState.user)\n  console.log(loggedInUser)\n  const playlists = useSelector(storeState => storeState.playlists)\n  const playlist = useSelector(storeState => storeState.playlistModule.playlist)\n  const [isMobile, setIsMobile] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  const [imgUrl, setImgUrl] = useState(null)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch({ type: SET_PLAYLIST, playlist: null })\n    userService.getLoggedInUser()\n    if (playlist) loadPlaylist(playlist)\n  }, [imgUrl])\n\n  useEffect(() => {\n\n    if (playlist) loadPlaylists('')\n  }, [playlist])\n\n  useEffect(() => {\n    function handleResize() {\n      // console.log(window.innerWidth < 960)\n      if (window.innerWidth < 700) setIsMobile(true)\n      if (window.innerWidth > 700) setIsMobile(false)\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  function handleChange({ target }) {\n    let { value, type, name: field } = target\n    value = type === 'number' ? +value : value\n    setPlaylistToEdit((prev) => ({ ...prev, [field]: value, createdBy: loggedInUser }))\n  }\n\n\n  async function onSavePlaylist(ev) {\n    ev.preventDefault()\n    setIsEditing(false)\n    try {\n      const playlist = await savePlaylist(playlistToEdit)\n      showSuccessMsg('saved Playlist!')\n      dispatch({ type: SET_PLAYLIST, playlist })\n      console.log(imgUrl === defaultPhoto, imgUrl, defaultPhoto)\n      navigate(`/detail/${playlist._id}`)\n    }\n    catch (err) {\n      console.log('err', err)\n      showErrorMsg('Cannot save playlist')\n    }\n  }\n\n  async function onUploadImg(ev) {\n    try {\n      const newImgUrl = await uploadService.uploadImg(ev)\n      setPlaylistToEdit((prev) => ({ ...prev, imgUrl: newImgUrl }))\n      setImgUrl(newImgUrl)\n      showSuccessMsg('saved img!')\n    }\n    catch (err) {\n      console.log('err:', err)\n    }\n  }\n\n\n  const onEditImgClick = () => {\n    const input = document.createElement('input')\n    input.type = 'file'\n    input.accept = 'image/*'\n    input.addEventListener('change', onUploadImg)\n    input.click()\n  }\n\n\n  return <section className=\"main-page playlist-details\">\n    <div className='playlist-detail-header'>\n\n      <div className='playlist-header-img-container '>\n\n        <img onClick={onEditImgClick} src={playlistToEdit.imgUrl} />\n\n      </div>\n\n      <div className='playlist-detail-header-info'>\n        <div className='playlist-detail-header-title-detail'>Playlist</div>\n\n        {/* <h1 className='playlist-edit-name' contentEditable={true} onInput={handleTextChange} style={{ unicodeBidi: 'bidi-override', direction: 'rtl' }}>\n          {nameOfPlaylist}\n          <h1>{playlistToEdit.name}</h1>\n        </h1> */}\n        <h1 onClick={() => setIsEditing(true)} className='playlist-detail-header-title'>{playlistToEdit.name}</h1>\n\n        <form onSubmit={onSavePlaylist}>\n          <input type=\"text\"\n            name=\"name\"\n            className='playlist-detail-header-title-input'\n            id=\"name\"\n            placeholder=\"playlist name...\"\n            // value={playlistToEdit.name}\n            onChange={handleChange}\n\n          />\n          <button onMouseDown={onSavePlaylist} type=\"submit\">save</button>\n        </form>\n\n      </div>\n    </div>\n  </section >\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}