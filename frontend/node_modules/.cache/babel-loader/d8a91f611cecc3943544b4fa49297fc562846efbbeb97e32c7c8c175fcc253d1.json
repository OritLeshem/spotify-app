{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Music } from \"../cmps/music\";\nimport { youtubeService } from \"../services/youtube.service\";\nimport { ISPLAYING, SET_CURRENT_SONG } from \"../store/player.reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PlaylistGenre() {\n  _s();\n  const {\n    genreName\n  } = useParams();\n  const dispatch = useDispatch();\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong);\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying);\n  const [isMobile, setIsMobile] = useState(false);\n  let [searchResults, setSearchResults] = useState(null);\n  useEffect(() => {\n    setSearchResults(youtubeService.getVideoResults(genreName));\n  }, []);\n  function handlePlayPauseClick(song) {\n    dispatch({\n      type: SET_CURRENT_SONG,\n      song\n    });\n    if (song.id !== currentSong.id) {\n      dispatch({\n        type: ISPLAYING,\n        isPlaying: true\n      });\n    } else {\n      dispatch({\n        type: ISPLAYING,\n        isPlaying: !isPlaying\n      });\n    }\n  }\n  function handleSong(ev, songId) {\n    console.log(\"song, li clicked\", songId);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"    \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"hello genre \", genreName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this), searchResults && searchResults.map(result => result.title)]\n  }, void 0, true);\n}\n_s(PlaylistGenre, \"m4BnxaCOmg8OjIs2UQkf2OgC1lw=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = PlaylistGenre;\nvar _c;\n$RefreshReg$(_c, \"PlaylistGenre\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","useParams","Music","youtubeService","ISPLAYING","SET_CURRENT_SONG","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaylistGenre","_s","genreName","dispatch","currentSong","storeState","playerModule","isPlaying","isMobile","setIsMobile","searchResults","setSearchResults","getVideoResults","handlePlayPauseClick","song","type","id","handleSong","ev","songId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","title","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { Music } from \"../cmps/music\"\nimport { youtubeService } from \"../services/youtube.service\"\nimport { ISPLAYING, SET_CURRENT_SONG } from \"../store/player.reducer\"\n\nexport function PlaylistGenre() {\n  const { genreName } = useParams()\n  const dispatch = useDispatch()\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong)\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying)\n  const [isMobile, setIsMobile] = useState(false)\n\n  let [searchResults, setSearchResults] = useState(null)\n  useEffect(() => {\n    setSearchResults(youtubeService.getVideoResults(genreName))\n  }, [])\n  function handlePlayPauseClick(song) {\n    dispatch({ type: SET_CURRENT_SONG, song })\n    if (song.id !== currentSong.id) {\n      dispatch({ type: ISPLAYING, isPlaying: true })\n    } else {\n      dispatch({ type: ISPLAYING, isPlaying: !isPlaying })\n    }\n  }\n  function handleSong(ev, songId) {\n    console.log(\"song, li clicked\", songId);\n  }\n\n  return <>    <h1>hello genre {genreName}</h1>\n    {searchResults && searchResults.map(result => result.title)}\n    {/* <ul className='playlist-detail-result-list'>{searchResults?.map((song, index) => <li key={song.id} className='song' onClick={() => handleSong(song.id)}  >\n      <div className=\"headline-table-col table-num\">{index + 1}\n      </div>\n      <div className=\"headline-table-col song-detail\">\n        <div className=\"table-img-container\">\n          <img src={song.imgUrl} alt=\"song\" />\n          <Music handlePlayPauseClick={handlePlayPauseClick} song={song} songId={song.id || '4m1EFMoRFvY'} />\n        </div>\n        <div className=\"cover-container\"></div>\n        <div className='song-info'>\n          {(!isMobile) ? <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 30)}{song.title.length > 30 && \"...\"}</small> : <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 15)}{song.title.length > 15 && \"...\"}</small>}\n          <small>{song.title.substring(0, song.title.indexOf(\"-\" || \":\"))}</small>\n        </div>\n      </div>\n      <small className='song-artist-name'>{song.title.substring(0, song.title.indexOf(\"-\" || \":\"))}</small>\n      <small className='song-time'>time</small>\n    </li>)}\n    </ul> */}\n\n\n\n  </>\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,SAAS,EAAEC,gBAAgB,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErE,OAAO,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAU,CAAC,GAAGX,SAAS,EAAE;EACjC,MAAMY,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,WAAW,GAAGd,WAAW,CAACe,UAAU,IAAIA,UAAU,CAACC,YAAY,CAACF,WAAW,CAAC;EAClF,MAAMG,SAAS,GAAGjB,WAAW,CAACe,UAAU,IAAIA,UAAU,CAACC,YAAY,CAACC,SAAS,CAAC;EAC9E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAE/C,IAAI,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtDD,SAAS,CAAC,MAAM;IACdwB,gBAAgB,CAAClB,cAAc,CAACmB,eAAe,CAACV,SAAS,CAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EACN,SAASW,oBAAoBA,CAACC,IAAI,EAAE;IAClCX,QAAQ,CAAC;MAAEY,IAAI,EAAEpB,gBAAgB;MAAEmB;IAAK,CAAC,CAAC;IAC1C,IAAIA,IAAI,CAACE,EAAE,KAAKZ,WAAW,CAACY,EAAE,EAAE;MAC9Bb,QAAQ,CAAC;QAAEY,IAAI,EAAErB,SAAS;QAAEa,SAAS,EAAE;MAAK,CAAC,CAAC;IAChD,CAAC,MAAM;MACLJ,QAAQ,CAAC;QAAEY,IAAI,EAAErB,SAAS;QAAEa,SAAS,EAAE,CAACA;MAAU,CAAC,CAAC;IACtD;EACF;EACA,SAASU,UAAUA,CAACC,EAAE,EAAEC,MAAM,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAAC;EACzC;EAEA,oBAAOtB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,GAAE,MAAI,eAAAzB,OAAA;MAAAyB,QAAA,GAAI,cAAY,EAACpB,SAAS;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAC1ChB,aAAa,IAAIA,aAAa,CAACiB,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,CAAC;EAAA,gBAsB1D;AACL;AAAC5B,EAAA,CA/CeD,aAAa;EAAA,QACLT,SAAS,EACdF,WAAW,EACRC,WAAW,EACbA,WAAW;AAAA;AAAAwC,EAAA,GAJf9B,aAAa;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}