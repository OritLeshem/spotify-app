{"ast":null,"code":"import { utilService } from './util.service.js';\nimport { storageService } from './async-storage.service.js';\nconst USER_KEY = 'userDB';\n_createUsers();\nexport const userService = {\n  get,\n  remove,\n  signup,\n  login,\n  logout,\n  getEmptyCredentials,\n  getLoggedinUser\n};\nfunction get(userId) {\n  return storageService.get(USER_KEY, userId);\n}\nfunction remove(userId) {\n  return storageService.remove(USER_KEY, userId);\n}\nfunction signup(credentials) {\n  return storageService.post(USER_KEY, credentials).then(user => {\n    _saveLoggedinUser(user);\n    return user;\n  });\n}\nfunction login(credentials) {\n  return storageService.query(USER_KEY).then(users => {\n    const user = users.find(u => u.username === credentials.username);\n    if (!user) return Promise.reject('Login failed');\n    _saveLoggedinUser(user);\n    return user;\n  });\n}\nfunction getEmptyCredentials() {\n  let fullname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let username = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let password = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'secret';\n  return {\n    fullname,\n    username,\n    password\n  };\n}\nfunction getLoggedinUser() {\n  return JSON.parse(sessionStorage.getItem('loggedinUser') || null);\n}\nfunction logout() {\n  sessionStorage.removeItem('loggedinUser');\n  return Promise.resolve();\n}\nfunction _saveLoggedinUser(user) {\n  sessionStorage.setItem('loggedinUser', JSON.stringify(user));\n}\nfunction _createUsers() {\n  let users = utilService.loadFromStorage(USER_KEY);\n  if (!users || !users.length) {\n    users = [];\n    users.push(_createUser('Muki Da', 'muki'));\n    users.push(_createUser('Puki Ba', 'puki'));\n    utilService.saveToStorage(USER_KEY, users);\n  }\n}\nfunction _createUser(fullname, username, password) {\n  const user = getEmptyCredentials(username);\n  user._id = utilService.makeId();\n  return user;\n}","map":{"version":3,"names":["utilService","storageService","USER_KEY","_createUsers","userService","get","remove","signup","login","logout","getEmptyCredentials","getLoggedinUser","userId","credentials","post","then","user","_saveLoggedinUser","query","users","find","u","username","Promise","reject","fullname","arguments","length","undefined","password","JSON","parse","sessionStorage","getItem","removeItem","resolve","setItem","stringify","loadFromStorage","push","_createUser","saveToStorage","_id","makeId"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/user.service.local.js"],"sourcesContent":["import { utilService } from './util.service.js'\r\nimport { storageService } from './async-storage.service.js'\r\n\r\nconst USER_KEY = 'userDB'\r\n_createUsers()\r\n\r\nexport const userService = {\r\n    get,\r\n    remove,\r\n    signup,\r\n    login,\r\n    logout,\r\n    getEmptyCredentials,\r\n    getLoggedinUser,\r\n}\r\n\r\n\r\nfunction get(userId) {\r\n    return storageService.get(USER_KEY, userId)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return storageService.remove(USER_KEY, userId)\r\n}\r\n\r\nfunction signup(credentials) {\r\n    return storageService.post(USER_KEY, credentials)\r\n        .then((user) => {\r\n            _saveLoggedinUser(user)\r\n            return user\r\n        })\r\n}\r\n\r\nfunction login(credentials) {\r\n    return storageService.query(USER_KEY)\r\n        .then(users => {\r\n            const user = users.find(u => u.username === credentials.username)\r\n            if (!user) return Promise.reject('Login failed')\r\n            _saveLoggedinUser(user)\r\n            return user\r\n        })\r\n}\r\n\r\nfunction getEmptyCredentials(fullname = '', username = '', password = 'secret') {\r\n    return { fullname, username, password }\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser') || null)\r\n}\r\n\r\nfunction logout() {\r\n    sessionStorage.removeItem('loggedinUser')\r\n    return Promise.resolve()\r\n}\r\n\r\nfunction _saveLoggedinUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n}\r\n\r\n\r\nfunction _createUsers() {\r\n    let users = utilService.loadFromStorage(USER_KEY)\r\n    if (!users || !users.length) {\r\n        users = []\r\n        users.push(_createUser('Muki Da', 'muki'))\r\n        users.push(_createUser('Puki Ba', 'puki'))\r\n\r\n        utilService.saveToStorage(USER_KEY, users)\r\n    }\r\n}\r\n\r\nfunction _createUser(fullname, username, password) {\r\n    const user = getEmptyCredentials(username)\r\n    user._id = utilService.makeId()\r\n    return user\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}