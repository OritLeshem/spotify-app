{"ast":null,"code":"export var storageService={query:query,get:get,post:post,put:put,remove:remove};function query(entityType){var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:500;var entities=JSON.parse(localStorage.getItem(entityType))||[];return new Promise(function(resolve){return setTimeout(function(){return resolve(entities);},delay);});}function get(entityType,entityId){return query(entityType).then(function(entities){var entity=entities.find(function(entity){return entity._id===entityId;});if(!entity)throw new Error(\"Get failed, cannot find entity with id: \".concat(entityId,\" in: \").concat(entityType));return entity;});}function post(entityType,newEntity){newEntity=JSON.parse(JSON.stringify(newEntity));newEntity._id=_makeId();return query(entityType).then(function(entities){entities.push(newEntity);_save(entityType,entities);return newEntity;});}function put(entityType,updatedEntity){console.log(\"put\",updatedEntity._id,entityType);return query(entityType).then(function(entities){console.log(entities);var idx=entities.findIndex(function(entity){return entity._id===updatedEntity._id;});console.log(\"put\",idx);if(idx<0)throw new Error(\"Update failed, cannot find entity with id: \".concat(updatedEntity._id,\" in: \").concat(entityType));entities.splice(idx,1,updatedEntity);_save(entityType,entities);console.log(\"put\",updatedEntity);return updatedEntity;});}function remove(entityType,entityId){return query(entityType).then(function(entities){var idx=entities.findIndex(function(entity){return entity._id===entityId;});if(idx<0)throw new Error(\"Remove failed, cannot find entity with id: \".concat(entityId,\" in: \").concat(entityType));entities.splice(idx,1);_save(entityType,entities);});}// Private functions\nfunction _save(entityType,entities){localStorage.setItem(entityType,JSON.stringify(entities));}function _makeId(){var length=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;var text='';var possible='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';for(var i=0;i<length;i++){text+=possible.charAt(Math.floor(Math.random()*possible.length));}return text;}","map":{"version":3,"names":["storageService","query","get","post","put","remove","entityType","delay","arguments","length","undefined","entities","JSON","parse","localStorage","getItem","Promise","resolve","setTimeout","entityId","then","entity","find","_id","Error","concat","newEntity","stringify","_makeId","push","_save","updatedEntity","console","log","idx","findIndex","splice","setItem","text","possible","i","charAt","Math","floor","random"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/async-storage.service.js"],"sourcesContent":["export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n}\r\n\r\nfunction query(entityType, delay = 500) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return new Promise(resolve => setTimeout(() => resolve(entities), delay))\r\n}\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType).then(entities => {\r\n        const entity = entities.find(entity => entity._id === entityId)\r\n        if (!entity) throw new Error(`Get failed, cannot find entity with id: ${entityId} in: ${entityType}`)\r\n        return entity\r\n    })\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity = JSON.parse(JSON.stringify(newEntity))\r\n    newEntity._id = _makeId()\r\n    return query(entityType).then(entities => {\r\n        entities.push(newEntity)\r\n        _save(entityType, entities)\r\n        return newEntity\r\n    })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    console.log(\"put\", updatedEntity._id, entityType)\r\n    return query(entityType).then(entities => {\r\n        console.log(entities)\r\n        const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n        console.log(\"put\", idx)\r\n        if (idx < 0) throw new Error(`Update failed, cannot find entity with id: ${updatedEntity._id} in: ${entityType}`)\r\n        entities.splice(idx, 1, updatedEntity)\r\n        _save(entityType, entities)\r\n        console.log(\"put\", updatedEntity)\r\n\r\n        return updatedEntity\r\n\r\n    })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType).then(entities => {\r\n        const idx = entities.findIndex(entity => entity._id === entityId)\r\n        if (idx < 0) throw new Error(`Remove failed, cannot find entity with id: ${entityId} in: ${entityType}`)\r\n        entities.splice(idx, 1)\r\n        _save(entityType, entities)\r\n    })\r\n}\r\n\r\n// Private functions\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}