{"ast":null,"code":"var _jsxFileName = \"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/play-bar.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer';\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from './form';\nimport { youtubeService } from '../services/youtube.service';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst opts = {\n  height: '0',\n  width: '0',\n  playerVars: {\n    autoplay: 0,\n    controls: 0,\n    showinfo: 0,\n    rel: 0\n  }\n};\nexport function PlayerBar() {\n  _s();\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong);\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying);\n  const playSongs = useSelector(storeState => storeState.playlistModule.playSongs);\n  const playerRef = useRef(null);\n  const [time, setTime] = useState(0);\n  const [userTime, setUserTime] = useState(0);\n  const dispatch = useDispatch();\n  const [showTime, setShowTime] = useState('00:00');\n  const [duration, setDuration] = useState();\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < 700) setIsMobile(true);\n      if (window.innerWidth > 700) setIsMobile(false);\n    }\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime < duration) {\n            return prevTime + 1;\n          }\n          return 0;\n        });\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [isPlaying, duration]);\n  //to set the duration each time we change the song\n  useEffect(() => {\n    setTime(0);\n    setUserTime(0);\n  }, [currentSong]);\n  useEffect(() => {\n    if (currentSong) {\n      // youtubeService.getTimeOfSong(currentSong._id)\n      console.log('Video ID:', currentSong.id);\n      axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${currentSong.id}&part=contentDetails&key=AIzaSyDbYtw99FWbtr4RCHxS0dxtj3--vXfSp4E`).then(res => {\n        setShowTime(youtubeService.formatDuration(res));\n        setDuration(youtubeService.convertDurationToSeconds(res));\n      }).catch(err => console.error('Error fetching song duration:', err));\n    }\n  }, [currentSong]);\n  useEffect(() => {\n    if (playerRef.current) {\n      if (isPlaying) {\n        playerRef.current.playVideo();\n      } else {\n        playerRef.current.pauseVideo();\n      }\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    const updateCurrentTime = () => {\n      if (playerRef.current && isPlaying) {\n        setTime(Math.round(playerRef.current.getCurrentTime()));\n      }\n    };\n    const interval = setInterval(updateCurrentTime, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [playerRef, isPlaying]);\n  const handleChange = event => {\n    setUserTime(parseInt(event.target.value, 10));\n  };\n  const handleRangeInputEnd = () => {\n    setTime(userTime);\n    if (playerRef.current) {\n      playerRef.current.seekTo(userTime);\n    }\n  };\n  function onReady(event) {\n    setTimeout(() => {\n      playerRef.current = event.target;\n      if (isPlaying) {\n        playerRef.current.playVideo();\n      }\n    }, 500);\n  }\n  const onPlayButtonClick = ev => {\n    dispatch({\n      type: ISPLAYING\n    });\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  function handleSongEnd() {\n    handleNextSong();\n  }\n  function handleNextSong() {\n    console.log('currentSong', currentSong);\n    const currIndex = playSongs.indexOf(currentSong);\n    if (currIndex === playSongs.length - 1) {\n      dispatch({\n        type: SET_CURRENT_SONG,\n        song: playSongs[0]\n      });\n    } else {\n      dispatch({\n        type: SET_CURRENT_SONG,\n        song: playSongs[currIndex + 1]\n      });\n    }\n    console.log('currIndex', currIndex);\n  }\n  function handlePrevSong() {\n    console.log('currentSong', currentSong, playSongs);\n    const currIndex = currentSong ? playSongs.indexOf(currentSong) : -1;\n    if (currIndex === 0) {\n      dispatch({\n        type: SET_CURRENT_SONG,\n        song: playSongs[playSongs.length - 1]\n      });\n    } else {\n      dispatch({\n        type: SET_CURRENT_SONG,\n        song: playSongs[currIndex - 1]\n      });\n    }\n    console.log('currIndex', currIndex);\n  }\n  function handleShuffle() {\n    console.log('handleShuffle');\n    const shuffledSongs = [...playSongs].sort(() => Math.random() - 0.5);\n    dispatch({\n      type: SET_CURRENT_SONG,\n      song: shuffledSongs[0]\n    });\n    dispatch({\n      type: 'SET_PLAYLIST',\n      playlist: shuffledSongs\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"player-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-control\",\n      children: [!isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        children: /*#__PURE__*/_jsxDEV(ShuffleBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevSong,\n        children: /*#__PURE__*/_jsxDEV(SkipBackBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playbar-play-pause\",\n        onClick: onPlayButtonClick,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fa-solid pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(PlayBtnBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), currentSong && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: currentSong.id || '4m1EFMoRFvY',\n        opts: opts,\n        onReady: onReady,\n        onEnd: handleSongEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextSong,\n        children: [' ', /*#__PURE__*/_jsxDEV(SkipForwardBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        children: /*#__PURE__*/_jsxDEV(RepeatBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration,\n          step: \"1\",\n          className: \"slider\",\n          value: userTime !== 0 ? userTime : time,\n          onChange: handleChange,\n          onMouseUp: handleRangeInputEnd,\n          onTouchEnd: handleRangeInputEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${time / duration * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: showTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerBar, \"CLYPfa7178Af1cBvhpjfXTOr+u8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = PlayerBar;\nvar _c;\n$RefreshReg$(_c, \"PlayerBar\");","map":{"version":3,"names":["useEffect","useState","useRef","useDispatch","useSelector","YouTube","ISPLAYING","SET_CURRENT_SONG","PlayBtnBar","RepeatBtn","ShuffleBtn","SkipBackBtn","SkipForwardBtn","youtubeService","axios","jsxDEV","_jsxDEV","opts","height","width","playerVars","autoplay","controls","showinfo","rel","PlayerBar","_s","currentSong","storeState","playerModule","isPlaying","playSongs","playlistModule","playerRef","time","setTime","userTime","setUserTime","dispatch","showTime","setShowTime","duration","setDuration","isMobile","setIsMobile","handleResize","window","innerWidth","addEventListener","removeEventListener","timer","setInterval","prevTime","clearInterval","console","log","id","get","then","res","formatDuration","convertDurationToSeconds","catch","err","error","current","playVideo","pauseVideo","updateCurrentTime","Math","round","getCurrentTime","interval","handleChange","event","parseInt","target","value","handleRangeInputEnd","seekTo","onReady","setTimeout","onPlayButtonClick","ev","type","formatTime","seconds","minutes","floor","remainingSeconds","toString","padStart","handleSongEnd","handleNextSong","currIndex","indexOf","length","song","handlePrevSong","handleShuffle","shuffledSongs","sort","random","playlist","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","videoId","onEnd","min","max","step","onChange","onMouseUp","onTouchEnd","style","_c","$RefreshReg$"],"sources":["/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/play-bar.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer';\nimport { PlayBtnBar, RepeatBtn, ShuffleBtn, SkipBackBtn, SkipForwardBtn } from './form';\nimport { youtubeService } from '../services/youtube.service';\nimport axios from 'axios';\nconst opts = {\n  height: '0',\n  width: '0',\n  playerVars: {\n    autoplay: 0,\n    controls: 0,\n    showinfo: 0,\n    rel: 0,\n  },\n};\n\nexport function PlayerBar() {\n  const currentSong = useSelector((storeState) => storeState.playerModule.currentSong);\n  const isPlaying = useSelector((storeState) => storeState.playerModule.isPlaying);\n  const playSongs = useSelector((storeState) => storeState.playlistModule.playSongs);\n  const playerRef = useRef(null);\n  const [time, setTime] = useState(0);\n  const [userTime, setUserTime] = useState(0);\n  const dispatch = useDispatch();\n  const [showTime, setShowTime] = useState('00:00');\n  const [duration, setDuration] = useState();\n  const [isMobile, setIsMobile] = useState(false)\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < 700) setIsMobile(true)\n      if (window.innerWidth > 700) setIsMobile(false)\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime < duration) {\n            return prevTime + 1;\n          }\n          return 0;\n        })\n      }, 1000)\n\n      return () => {\n        clearInterval(timer)\n      }\n    }\n  }, [isPlaying, duration])\n  //to set the duration each time we change the song\n  useEffect(() => {\n    setTime(0)\n    setUserTime(0)\n\n  }, [currentSong])\n\n  useEffect(() => {\n    if (currentSong) {\n      // youtubeService.getTimeOfSong(currentSong._id)\n      console.log('Video ID:', currentSong.id)\n      axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${currentSong.id}&part=contentDetails&key=AIzaSyDbYtw99FWbtr4RCHxS0dxtj3--vXfSp4E`)\n        .then(res => {\n          setShowTime(youtubeService.formatDuration(res))\n          setDuration(youtubeService.convertDurationToSeconds(res))\n        })\n\n        .catch((err) => console.error('Error fetching song duration:', err))\n    }\n  }, [currentSong])\n\n  useEffect(() => {\n    if (playerRef.current) {\n      if (isPlaying) {\n        playerRef.current.playVideo()\n      } else {\n        playerRef.current.pauseVideo()\n      }\n    }\n  }, [isPlaying])\n\n  useEffect(() => {\n    const updateCurrentTime = () => {\n      if (playerRef.current && isPlaying) {\n        setTime(Math.round(playerRef.current.getCurrentTime()))\n      }\n    };\n\n    const interval = setInterval(updateCurrentTime, 1000)\n\n    return () => {\n      clearInterval(interval)\n    };\n  }, [playerRef, isPlaying])\n\n  const handleChange = (event) => {\n    setUserTime(parseInt(event.target.value, 10))\n  };\n\n  const handleRangeInputEnd = () => {\n    setTime(userTime)\n    if (playerRef.current) {\n      playerRef.current.seekTo(userTime)\n    }\n  };\n\n  function onReady(event) {\n    setTimeout(() => {\n      playerRef.current = event.target\n      if (isPlaying) {\n        playerRef.current.playVideo()\n      }\n    }, 500);\n  }\n\n  const onPlayButtonClick = (ev) => {\n    dispatch({ type: ISPLAYING })\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60)\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`\n  }\n\n  function handleSongEnd() {\n    handleNextSong()\n  }\n  function handleNextSong() {\n    console.log('currentSong', currentSong)\n    const currIndex = playSongs.indexOf(currentSong)\n    if (currIndex === playSongs.length - 1) {\n      dispatch({ type: SET_CURRENT_SONG, song: playSongs[0] })\n    } else {\n      dispatch({ type: SET_CURRENT_SONG, song: playSongs[currIndex + 1] })\n    }\n    console.log('currIndex', currIndex)\n  }\n  function handlePrevSong() {\n    console.log('currentSong', currentSong, playSongs)\n    const currIndex = currentSong ? playSongs.indexOf(currentSong) : -1\n    if (currIndex === 0) {\n      dispatch({ type: SET_CURRENT_SONG, song: playSongs[playSongs.length - 1] })\n    } else {\n      dispatch({ type: SET_CURRENT_SONG, song: playSongs[currIndex - 1] })\n    }\n    console.log('currIndex', currIndex)\n  }\n\n  function handleShuffle() {\n    console.log('handleShuffle')\n    const shuffledSongs = [...playSongs].sort(() => Math.random() - 0.5)\n    dispatch({ type: SET_CURRENT_SONG, song: shuffledSongs[0] })\n    dispatch({ type: 'SET_PLAYLIST', playlist: shuffledSongs })\n  }\n  return (\n    <section className='player-bar'>\n      <div className='player-control'>\n        {!isMobile && <button onClick={handleShuffle}><ShuffleBtn /></button>}\n\n        <button onClick={handlePrevSong}>\n          <SkipBackBtn />\n        </button>\n        <button className='playbar-play-pause' onClick={onPlayButtonClick}>\n          {isPlaying ? <span className='fa-solid pause'></span> : <PlayBtnBar />}\n        </button>\n        {currentSong && (\n          <YouTube videoId={currentSong.id || '4m1EFMoRFvY'} opts={opts} onReady={onReady} onEnd={handleSongEnd}\n          />\n        )}\n        <button onClick={handleNextSong}>\n          {' '}\n          <SkipForwardBtn />\n        </button>\n        {!isMobile && <button onClick={handleShuffle}><RepeatBtn /></button>}\n      </div>\n      <div className='playback-bar'>\n        <small>{formatTime(time)}</small>\n        <div className='slider-container'>\n          <input\n            type='range'\n            min='0'\n            max={duration}\n            step='1'\n            className='slider'\n            value={userTime !== 0 ? userTime : time}\n            onChange={handleChange}\n            onMouseUp={handleRangeInputEnd}\n            onTouchEnd={handleRangeInputEnd}\n          />\n          {/* <div className='progress' style={{ width: `${time / 2}%` }}></div> */}\n          <div className='progress' style={{ width: `${(time / duration) * 100}%` }}></div>\n\n\n        </div>\n        <small>{showTime}</small>\n      </div>\n    </section>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}