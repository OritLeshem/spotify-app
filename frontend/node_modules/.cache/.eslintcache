[{"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/index.js":"1","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/reportWebVitals.js":"2","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/root-cmp.js":"3","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/store.js":"4","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/playlist.reducer.js":"5","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/player.reducer.js":"6","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/app-header.jsx":"7","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/navbar.jsx":"8","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/app-footer.jsx":"9","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/user-msg.jsx":"10","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/home-page.jsx":"11","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-search.jsx":"12","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx":"13","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-index.jsx":"14","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-detail.jsx":"15","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-edit.jsx":"16","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/playlist.service.local.js":"17","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/playlist.actions.js":"18","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/event-bus.service.js":"19","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/youtube.service.js":"20","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/util.service.js":"21","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/upload.service.js":"22","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/form.jsx":"23","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/song-display.jsx":"24","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/play-bar.jsx":"25","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/options-bar.jsx":"26","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-preview.jsx":"27","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-filter.jsx":"28","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-list.jsx":"29","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/system/system.actions.js":"30","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/genre-list.jsx":"31","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/music.jsx":"32","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/async-storage.service.js":"33","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/system/system.reducer.js":"34","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/user.service.js":"35","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/login-signup.jsx":"36","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/login-form.jsx":"37","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/user.service.local.js":"38","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/user.actions.js":"39","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/user.reducer.js":"40","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/playlist.service.js":"41","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/http.service.js":"42","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-like.jsx":"43"},{"size":732,"mtime":1679577775719,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1679489936943,"results":"46","hashOfConfig":"45"},{"size":1247,"mtime":1681312695763,"results":"47","hashOfConfig":"45"},{"size":744,"mtime":1680835243738,"results":"48","hashOfConfig":"45"},{"size":3089,"mtime":1681151771388,"results":"49","hashOfConfig":"45"},{"size":1272,"mtime":1681151743779,"results":"50","hashOfConfig":"45"},{"size":964,"mtime":1681151636101,"results":"51","hashOfConfig":"45"},{"size":3387,"mtime":1681312714162,"results":"52","hashOfConfig":"45"},{"size":734,"mtime":1681151262044,"results":"53","hashOfConfig":"45"},{"size":797,"mtime":1680819476912,"results":"54","hashOfConfig":"45"},{"size":1124,"mtime":1681151674383,"results":"55","hashOfConfig":"45"},{"size":3781,"mtime":1681151084335,"results":"56","hashOfConfig":"45"},{"size":3620,"mtime":1681151455984,"results":"57","hashOfConfig":"45"},{"size":1876,"mtime":1681151069422,"results":"58","hashOfConfig":"45"},{"size":7154,"mtime":1681151060970,"results":"59","hashOfConfig":"45"},{"size":3709,"mtime":1681149285436,"results":"60","hashOfConfig":"45"},{"size":9399,"mtime":1680658152889,"results":"61","hashOfConfig":"45"},{"size":4321,"mtime":1689693896690,"results":"62","hashOfConfig":"45"},{"size":903,"mtime":1680820220022,"results":"63","hashOfConfig":"45"},{"size":2764,"mtime":1681151437377,"results":"64","hashOfConfig":"45"},{"size":2245,"mtime":1680834943328,"results":"65","hashOfConfig":"45"},{"size":563,"mtime":1681151158788,"results":"66","hashOfConfig":"45"},{"size":12644,"mtime":1679494687955,"results":"67","hashOfConfig":"45"},{"size":1252,"mtime":1681151676380,"results":"68","hashOfConfig":"45"},{"size":6199,"mtime":1681151649140,"results":"69","hashOfConfig":"45"},{"size":856,"mtime":1681151563656,"results":"70","hashOfConfig":"45"},{"size":766,"mtime":1681151625794,"results":"71","hashOfConfig":"45"},{"size":1128,"mtime":1681151573605,"results":"72","hashOfConfig":"45"},{"size":401,"mtime":1681151678108,"results":"73","hashOfConfig":"45"},{"size":175,"mtime":1679494494980,"results":"74","hashOfConfig":"45"},{"size":1934,"mtime":1681151499146,"results":"75","hashOfConfig":"45"},{"size":1537,"mtime":1680365266490,"results":"76","hashOfConfig":"45"},{"size":2249,"mtime":1680192727109,"results":"77","hashOfConfig":"45"},{"size":548,"mtime":1679494494981,"results":"78","hashOfConfig":"45"},{"size":1286,"mtime":1680832055579,"results":"79","hashOfConfig":"45"},{"size":854,"mtime":1681151526479,"results":"80","hashOfConfig":"45"},{"size":978,"mtime":1681151519660,"results":"81","hashOfConfig":"45"},{"size":2516,"mtime":1680647583149,"results":"82","hashOfConfig":"45"},{"size":1320,"mtime":1681151786991,"results":"83","hashOfConfig":"45"},{"size":383,"mtime":1680835290176,"results":"84","hashOfConfig":"45"},{"size":5998,"mtime":1680834842760,"results":"85","hashOfConfig":"45"},{"size":1162,"mtime":1680832006889,"results":"86","hashOfConfig":"45"},{"size":114,"mtime":1681312837954,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"r3i3wg",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"91"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/index.js",[],[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/reportWebVitals.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/root-cmp.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/store.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/playlist.reducer.js",["231"],[],"import { playlistService } from \"../services/playlist.service\"\r\n\r\nexport const SET_PLAYLISTS = 'SET_PLAYLISTS'\r\nexport const REMOVE_PLAYLIST = 'REMOVE_PLAYLIST'\r\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST'\r\nexport const UPDATE_PLAYLIST = 'UPDATE_PLAYLIST'\r\nexport const UNDO_REMOVE_PLAYLIST = 'UNDO_REMOVE_PLAYLIST'\r\nexport const UPDATE_NAME_PLAYLIST = 'UPDATE_NAME_PLAYLIST'\r\n//song\r\nexport const REMOVE_SONG_FROM_PLAYLIST = 'REMOVE_SONG_FROM_PLAYLIST'\r\nexport const SET_PLAYLIST = 'SET_PLAYLIST'\r\nexport const ADD_SONG_TO_PLAYLIST = 'ADD_SONG_TO_PLAYLIST'\r\nexport const SET_SONGS_LIST = 'SET_SONGS_LIST'\r\n\r\nconst initialState = {\r\n    playlists: [],\r\n    playlist: null,\r\n    lastRemovedPlaylist: null,\r\n    playSongs: [{\r\n        \"_id\": \"4m1EFMoRFvY\",\r\n        \"title\": \"Beyoncé - Single Ladies\",\r\n        \"description\": \"Beyoncé's official 'Single Ladies\",\r\n        \"tags\": [\r\n            \"Pop\",\r\n            \"Happy\"\r\n        ],\r\n        \"imgUrl\": \"https://i.ytimg.com/vi/4m1EFMoRFvY/hqdefault.jpg\",\r\n        currentTime: 0\r\n    }],\r\n    currentSong: {\r\n        \"_id\": \"4m1EFMoRFvY\",\r\n        \"title\": \"Beyoncé - Single Ladies\",\r\n        \"description\": \"Beyoncé's official 'Single Ladies\",\r\n        \"tags\": [\r\n            \"Pop\",\r\n            \"Happy\"\r\n        ],\r\n        \"imgUrl\": \"https://i.ytimg.com/vi/4m1EFMoRFvY/hqdefault.jpg\",\r\n        currentTime: 0\r\n    }\r\n}\r\nexport function playlistReducer(state = initialState, action) {\r\n    var newState = state\r\n    var playlists\r\n    switch (action.type) {\r\n        case SET_PLAYLISTS:\r\n            newState = { ...state, playlists: action.playlists }\r\n            break\r\n        case REMOVE_PLAYLIST:\r\n            const lastRemovedPlaylist = state.playlists.find(playlist => playlist._id === action.playlistId)\r\n            playlists = state.playlists.filter(playlist => playlist._id !== action.playlistId)\r\n            newState = { ...state, playlists, lastRemovedPlaylist }\r\n            break\r\n        case ADD_PLAYLIST:\r\n            newState = { ...state, playlists: [...state.playlists, action.playlist] }\r\n            break\r\n        case UPDATE_PLAYLIST:\r\n            playlists = state.playlists.map(playlist => (playlist._id === action.playlist._id) ? action.playlist : playlist)\r\n            newState = { ...state, playlists }\r\n            console.log('PLAYLISTS', playlists)\r\n            break\r\n        //song in playlist\r\n        case SET_PLAYLIST:\r\n            newState = { ...state, playlist: action.playlist }\r\n            break\r\n        //song in playlist-search\r\n\r\n        case SET_SONGS_LIST:\r\n            newState = { ...state, playSongs: action.playSongs }\r\n            break\r\n        case REMOVE_SONG_FROM_PLAYLIST:\r\n            newState = { ...state, playlist: action.playlist }\r\n            break\r\n        case ADD_SONG_TO_PLAYLIST:\r\n            newState = { ...state, playlist: action.playlist }\r\n            break\r\n        case UPDATE_NAME_PLAYLIST:\r\n            newState = { ...state, playlist: { ...state.playlist, name: action.newName } }\r\n            break\r\n        default:\r\n    }\r\n    return newState\r\n}\r\n","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/player.reducer.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/app-header.jsx",["232","233","234"],[],"import { BackBtn, ForwardBtn, UserBtn } from './form'\nimport { LoginSignup } from './login-signup.jsx'\nimport { logout } from '../store/user.actions'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nexport function AppHeader() {\n  const user = useSelector(storeState => storeState.userModule.user)\n  const navigate = useNavigate()\n\n  function onLogout() {\n    logout()\n    navigate('/')\n\n  }\n  return <>\n    <header className='app-header'>\n      {/* <main> */}\n      <nav>\n        {/* <BackBtn />\n          <ForwardBtn /> */}\n      </nav>\n      {/* <UserBtn /> */}\n      {user ? (\n        < section className='user-info'>\n          <span>Hello {user.username} </span>\n          <button className='user-login-logout' onClick={onLogout}> Logout</button>\n        </ section >\n      ) : (\n        <section className='user-info'>\n          <LoginSignup />\n        </section>\n      )}\n\n      {/* </main> */}\n    </header>\n  </>\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/navbar.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/app-footer.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/user-msg.jsx",["235","236","237"],[],"import { useState, useEffect, useRef } from 'react'\n\nimport { eventBus, showSuccessMsg } from '../services/event-bus.service'\nimport { changeUserMsg } from '../store/system/system.actions'\n\nexport function UserMsg() {\n  const [msg, setMsg] = useState(null)\n  const timeoutIdRef = useRef()\n\n  useEffect(() => {\n    const unsubscribe = eventBus.on('show-msg', (msg) => {\n      setMsg(msg)\n      window.scrollTo({ top: 0, behavior: 'smooth' })\n      if (timeoutIdRef.current) {\n        timeoutIdRef.current = null\n        clearTimeout(timeoutIdRef.current)\n      }\n      timeoutIdRef.current = setTimeout(closeMsg, 3000)\n    })\n\n  }, [])\n\n  function closeMsg() {\n    setMsg(null)\n  }\n\n  if (!msg) return <span></span>\n  return <section className={`user-msg ${msg.type}`}>\n    {msg.txt}\n  </section>\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/home-page.jsx",["238","239","240"],[],"import React, { useEffect, useState } from 'react'\nimport { PlaylistList } from '../cmps/playlist-list'\nimport { PlaylistPreview } from '../cmps/playlist-preview'\nimport { GreenBtn, LibrarySvg } from '../cmps/form'\nimport { playlistService } from '../services/playlist.service'\nimport { youtubeService } from '../services/youtube.service'\n\nexport function HomePage() {\n  const [pop, setPop] = useState()\n  const [latin, setLatin] = useState()\n  const [hiphop, setHiphop] = useState()\n\n  useEffect(() => {\n    const latin = playlistService.latin()\n    setLatin(latin)\n    const hiphop = playlistService.hiphop()\n    setHiphop(hiphop)\n    const pop = playlistService.pop()\n    setPop(pop)\n  }, [])\n\n  youtubeService.getVideoResults('pink')\n    .then(res => {\n    })\n\n  if (!pop) return\n  return <section className='main-page home-page'>\n    <h2 className='home-page-title'>POP</h2>\n    <PlaylistList playlists={pop.songs} />\n    <h2 className='home-page-title'>HIPHOP</h2>\n    <PlaylistList playlists={hiphop.songs} />\n    <h2 className='home-page-title'>LATIN</h2>\n    <PlaylistList playlists={latin.songs} />\n  </section >\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-search.jsx",["241","242","243","244"],[],"import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { youtubeService } from '../services/youtube.service'\nimport { showErrorMsg, showSuccessMsg } from '../services/event-bus.service'\n\nimport { loadPlaylists } from '../store/playlist.actions'\nimport { SET_SONGS_LIST } from '../store/playlist.reducer'\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer'\n\nimport { PlaylistList } from '../cmps/playlist-list'\nimport { PlaylistFilter } from '../cmps/playlist-filter'\nimport { GenreList } from '../cmps/genre-list'\nimport { AppDivider, PlayBtn } from '../cmps/form'\nimport { Music } from '../cmps/music'\n\nexport function PlaylistSearch() {\n  const playlists = useSelector(storeState => storeState.playlistModule.playlists)\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying)\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong)\n  const dispatch = useDispatch()\n  const [searchResults, setSearchResults] = useState(null)\n  const [isMobile, setIsMobile] = useState(false)\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < 700) setIsMobile(true)\n      if (window.innerWidth > 700) setIsMobile(false)\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n  async function onLoadPlaylists(filterBy) {\n    try {\n      await loadPlaylists(filterBy)\n    } catch (err) {\n      showErrorMsg('Cannot load playlists', err)\n    }\n  }\n\n  function onSetFilter(filterBy) {\n    console.log('filterBy', filterBy.txt)\n    youtubeService.getVideoResults(filterBy.txt)\n      .then(res => {\n        setSearchResults(res)\n        dispatch({ type: SET_SONGS_LIST, playSongs: res })\n        console.log(res)\n      })\n  }\n\n  const handlePlayPauseClick = (song) => {\n    if (song.id === currentSong.id) {\n      dispatch({ type: ISPLAYING });\n    } else {\n      if (isPlaying) {\n        dispatch({ type: ISPLAYING });\n      }\n      dispatch({ type: SET_CURRENT_SONG, song });\n      dispatch({ type: ISPLAYING });\n    }\n  }\n\n  if (!playlists) return\n  return <section className='main-page playlist-search'>\n    <PlaylistFilter onSetFilter={onSetFilter} />\n    {!searchResults && <>\n\n      <h2>Browse all</h2>\n      <GenreList />\n      <AppDivider />\n    </>}\n    <section className='main-page playlist-details'>\n      {searchResults && <>\n        <ul className='playlist-detail-result-list search-detail'>{searchResults?.map((song, index) => <li key={song.id} className='song'   >\n          <div className='table-num'>{index + 1}\n          </div>\n          <div className='song-detail'>\n            <div className='table-img-container'>\n              <img src={song.imgUrl} alt='song' />\n              <Music handlePlayPauseClick={handlePlayPauseClick} song={song} songId={song.id || '4m1EFMoRFvY'} />\n            </div>\n            <div className='cover-container'></div>\n            <div className='song-info'>\n              {(!isMobile) ? <small className={currentSong?.id === song.id ? 'chosen-green' : ''} title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 30)}{song.title.length > 30 && '...'}</small> : <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 15)}{song.title.length > 15 && '...'}</small>}\n              <small>{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n            </div>\n          </div>\n          <small className='song-artist-name'>{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n\n        </li>)}\n        </ul>\n      </>}\n    </section>\n  </section >\n} ","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-genre.jsx",["245"],[],"import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nimport { youtubeService } from '../services/youtube.service'\n\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer'\nimport { SET_SONGS_LIST } from '../store/playlist.reducer'\n\nimport { Music } from '../cmps/music'\n\nexport function PlaylistGenre() {\n  const { genreName } = useParams()\n  const dispatch = useDispatch()\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong)\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying)\n  const [isMobile, setIsMobile] = useState(false)\n\n  let [searchResults, setSearchResults] = useState(null)\n  useEffect(() => {\n    async function fetchVideoResults() {\n      const results = await youtubeService.getVideoResults(genreName)\n      setSearchResults(results)\n      dispatch({ type: SET_SONGS_LIST, playSongs: results })\n\n    }\n    fetchVideoResults()\n  }, [genreName])\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < 700) setIsMobile(true)\n      if (window.innerWidth > 700) setIsMobile(false)\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n  const handlePlayPauseClick = (song) => {\n    if (song.id === currentSong.id) {\n      // If the clicked song is the same as the current song, toggle isPlaying state.\n      dispatch({ type: ISPLAYING })\n    } else {\n      // If the clicked song is different, pause the current song, set the new song and start playing it.\n      if (isPlaying) {\n        dispatch({ type: ISPLAYING })\n      }\n      dispatch({ type: SET_CURRENT_SONG, song })\n      dispatch({ type: ISPLAYING })\n    }\n  };\n  function handleSong(ev, songId) {\n    console.log('song, li clicked', songId)\n  }\n\n  return <section className='main-page playlist-details'>    <h2> {genreName}</h2>\n    <div className='headline-table-title'>\n      <div className='header-row'>\n        <div className='headline-table-col'>\n          <span>#</span>\n        </div>\n        <div className='headline-table-col'>\n          <span>TITLE</span>\n        </div>\n        <div >\n          <span>ALBUM</span>\n        </div>\n      </div>\n    </div>\n    {searchResults && <ul className='playlist-detail-result-list'>{searchResults?.map((song, index) => <li key={song.id} className='song' onClick={() => handleSong(song.id)}  >\n      <div className='headline-table-col table-num'>{index + 1}\n      </div>\n      <div className='headline-table-col song-detail'>\n        <div className='table-img-container'>\n          <img src={song.imgUrl} alt='song' />\n          <Music handlePlayPauseClick={handlePlayPauseClick} song={song} songId={song.id || '4m1EFMoRFvY'} />\n        </div>\n        <div className='cover-container'></div>\n        <div className='song-info'>\n          {(!isMobile) ? <small className={currentSong?.id === song.id ? 'chosen-green' : ''} title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 1), song.title.length + 1).slice(0, 30)}{song.title.length > 30 && '...'}</small> : <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 15)}{song.title.length > 15 && '...'}</small>}\n          <small>{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n        </div>\n      </div>\n      <small className='song-artist-name' >{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n\n    </li>)}\n    </ul>}\n  </section>\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-index.jsx",["246","247"],[],"import { useSelector } from 'react-redux';\nimport { useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nimport { loadPlaylists, removePlaylist } from '../store/playlist.actions';\n\nimport { PlayBtn } from '../cmps/form'\n\nexport function PlaylistIndex() {\n  const user = useSelector(storeState => storeState.userModule.user)\n  let playlists = useSelector(storeState => storeState.playlistModule.playlists)\n  const navigate = useNavigate()\n  useEffect(() => {\n    loadPlaylists()\n    console.log(playlists)\n  }, [])\n  function onRemovePlaylist(ev, playlistId) {\n    ev.stopPropagation();\n\n    console.log('removePlaylist', playlistId)\n    removePlaylist(playlistId)\n    // navigate('/search')\n  }\n\n  if (!user) return <span className='main-page playlist-details'>Please signup / login to create a playlist</span>\n  else return <section className='main-page home-page'>\n    <h2 className='home-page-title'>PLAYLISTS</h2>\n    <ul className='playlist-index'>\n      {user && playlists && playlists && playlists.filter(playlist => playlist.createdBy._id === user._id).map(playlist =>\n        <li className='playlist-preview' key={playlist.id}>\n          <small onClick={(ev) => onRemovePlaylist(ev, playlist._id)} className='trash'>X</small>\n\n          <Link to={`/detail/${playlist._id}`}>\n            <div className='img-container-preview '>\n              <img src={playlist.imgUrl} alt='' />\n              <PlayBtn />\n            </div>\n            <div>\n              <span>{playlist.name.substring(0, playlist.name.indexOf('-' || ':')) || playlist.name.slice(0, 20)}{playlist.name.length > 20 && '...'}</span>\n              <h5 >{playlist.name.slice((playlist.name.indexOf('-' || ':') + 1), playlist.name.length + 1).slice(0, 15)}{playlist.name.length > 15 && '...'}</h5>        </div>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </section >\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-detail.jsx",["248","249"],[],"import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport defaultPhoto from '../assets/imgs/add-pic.png'\n\nimport { ISPLAYING, SET_CURRENT_SONG } from '../store/player.reducer';\nimport { addSonfToPlaylist, loadPlaylist, removeSongFromPlayList } from '../store/playlist.actions';\n\nimport { showErrorMsg } from '../services/event-bus.service'\nimport { youtubeService } from '../services/youtube.service';\nimport { utilService } from '../services/util.service';\nimport { PlaylistFilter } from '../cmps/playlist-filter';\nimport { Music } from '../cmps/music';\nimport { loadPlaylists } from '../store/playlist.actions';\n\n\nexport function PlaylistDetail() {\n  const dispatch = useDispatch()\n  const { playlistId } = useParams()\n  const isPlaying = useSelector(storeState => storeState.playerModule.isPlaying)\n  let playlist = useSelector(storeState => storeState.playlistModule.playlist)\n  const currentSong = useSelector(storeState => storeState.playerModule.currentSong)\n  const [searchResults, setSearchResults] = useState(null)\n  const [isMobile, setIsMobile] = useState(false)\n  const playlists = useSelector(storeState => storeState.playlistModule.playlists)\n  const user = useSelector(storeState => storeState.userModule.user)\n\n  useEffect(() => {\n    loadPlaylist(playlistId)\n  }, [playlistId])\n\n  useEffect(() => {\n    loadPlaylists()\n  }, [playlist])\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < 700) setIsMobile(true)\n      if (window.innerWidth > 700) setIsMobile(false)\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  useEffect(() => {\n    const randomColor = utilService.generateRandomColor()\n    document.body.style.backgroundColor = randomColor;\n    return () => {\n      document.body.style.backgroundColor = '#121212';\n    };\n  }, [playlistId]);\n\n\n  function onSetFilter(filterBy) {\n    console.log('filterBy', filterBy.txt)\n    youtubeService.getVideoResults(filterBy.txt)\n      .then(res => setSearchResults(res))\n  }\n\n  function handleSong(ev, songId) {\n    console.log('song, li clicked', songId);\n  }\n\n  function onRemoveSongFromPlayList(ev, songId) {\n    ev.stopPropagation()\n    console.log('remove song', songId)\n    removeSongFromPlayList(playlistId, songId)\n  }\n\n  function onAddSongTpPlayList(song) {\n    console.log('add song', song)\n    if (playlist?.songs.some(checkSong => checkSong.id === song.id)) {\n      showErrorMsg('This song is already in this playlist')\n      return\n    }\n    addSonfToPlaylist(playlistId, song)\n  }\n\n  const handlePlayPauseClick = (song) => {\n    if (song.id === currentSong.id) {\n      dispatch({ type: ISPLAYING });\n    } else {\n      if (isPlaying) {\n        dispatch({ type: ISPLAYING });\n      }\n      dispatch({ type: SET_CURRENT_SONG, song });\n      dispatch({ type: ISPLAYING });\n    }\n  }\n\n  if (!playlist) return\n  const { name, songs } = playlist\n\n  return <>\n    <section className='main-page playlist-search'> </section>\n    <section className='main-page playlist-details'>\n      <div className='playlist-detail-header'>\n        <div className='playlist-header-img-container '> <img src={playlist.imgUrl !== defaultPhoto ? playlist.imgUrl : songs.length ? songs[0].imgUrl : defaultPhoto} /></div>\n        <div className='playlist-detail-header-info'>\n          <div className='playlist-detail-header-title-detail'>Playlist</div>\n          <h1 className='playlist-detail-header-title'>\n            {name}\n          </h1>\n          <div className='playlist-detail-header-title-details'>{user.username} | {songs?.length} songs | 14 min 57 sec</div>\n        </div>\n      </div>\n      <div className='headline-table-title'>\n        <div className='header-row'>\n          <div>\n            <span>#</span>\n          </div>\n          <div >\n            <span>TITLE</span>\n          </div>\n          <div >\n            <span>ALBUM</span>\n          </div>\n\n        </div>\n      </div>\n      <ul className='list-of-playlist'>{songs?.map((song, index) => <li key={song.id} className='song' onClick={() => handleSong(song.id)}  >\n        <div className='table-num'>{index + 1}\n        </div>\n        <div className='song-detail'>\n          <div className='table-img-container'>\n            <img src={song.imgUrl} alt='song' />\n            <Music handlePlayPauseClick={handlePlayPauseClick} song={song} songId={song.id || '4m1EFMoRFvY'} />\n          </div>\n          <div className='cover-container'></div>\n          <div className='song-info'>\n            {/* TITLE FORMATTED */}\n            {(!isMobile) ? <small className={currentSong?.id === song.id ? 'chosen-green' : ''} title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 1), song.title.length + 1).slice(0, 50)}{song.title.length > 50 && '...'}</small> : <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 15)}{song.title.length > 15 && '...'}</small>}\n            {/* ARTIST NAME */}\n            <small >{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n\n          </div>\n        </div>\n        <small className='song-artist-name' >{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n\n\n        <small onClick={(ev) => onRemoveSongFromPlayList(ev, song.id)} className='fa-regular trash-can'></small>\n      </li>)}\n      </ul>\n      <hr />\n      <h2>Let's find something for your playlist</h2>\n      <PlaylistFilter onSetFilter={onSetFilter} title='Search for songs or episodes' />\n      {!searchResults && <div className='detail-divider'></div>}\n      {searchResults && <>\n        <ul className='playlist-detail-result-list'>{searchResults?.map((song, index) => <li key={song.id} className='song' onClick={() => handleSong(song.id)}  >\n          <div className='table-num'>{index + 1}\n          </div>\n          <div className='song-detail'>\n            <div className='table-img-container'>\n              <img src={song.imgUrl} alt='song' />\n              <Music handlePlayPauseClick={handlePlayPauseClick} song={song} songId={song.id || '4m1EFMoRFvY'} />\n            </div>\n            <div className='cover-container'></div>\n            <div className='song-info'>\n              {(!isMobile) ? <small className={currentSong?.id === song.id ? 'chosen-green' : ''} title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 30)}{song.title.length > 30 && '...'}</small> : <small title={song.title}>{song.title.slice((song.title.indexOf('-' || ':') + 2), song.title.length + 1).slice(0, 15)}{song.title.length > 15 && '...'}</small>}\n              <small>{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n            </div>\n          </div>\n          <small className='song-artist-name'>{song.title.substring(0, song.title.indexOf('-' || ':'))}</small>\n          <small onClick={() => { onAddSongTpPlayList(song) }} className='fa-regular plus'></small>\n        </li>)}\n        </ul>\n      </>}\n    </section>\n  </>\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-edit.jsx",["250","251","252","253"],[],"import { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { playlistService } from '../services/playlist.service'\nimport { showErrorMsg, showSuccessMsg } from '../services/event-bus.service'\nimport { uploadService } from '../services/upload.service';\n\nimport { loadPlaylist, loadPlaylists, savePlaylist } from '../store/playlist.actions';\nimport { SET_PLAYLIST } from '../store/playlist.reducer'\n\n\nexport function PlaylistEdit() {\n  const [playlistToEdit, setPlaylistToEdit] = useState(playlistService.getEmptyPlaylist())\n  const user = useSelector(storeState => storeState.userModule.user)\n\n  console.log(playlistToEdit)\n  const playlist = useSelector(storeState => storeState.playlistModule.playlist)\n  const [isMobile, setIsMobile] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  const [imgUrl, setImgUrl] = useState(null)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch({ type: SET_PLAYLIST, playlist: null })\n    if (playlist) loadPlaylist(playlist)\n  }, [imgUrl])\n\n  useEffect(() => {\n    if (playlist) loadPlaylists('')\n  }, [playlist])\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < 700) setIsMobile(true)\n      if (window.innerWidth > 700) setIsMobile(false)\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  function handleChange({ target }) {\n    let { value, type, name: field } = target\n    value = type === 'number' ? +value : value\n    setPlaylistToEdit((prev) => ({ ...prev, [field]: value, createdBy: { ...user } }))\n  }\n\n\n  async function onSavePlaylist(ev) {\n    ev.preventDefault()\n    setIsEditing(false)\n    try {\n      const playlist = await savePlaylist(playlistToEdit)\n      showSuccessMsg('saved Playlist!')\n      dispatch({ type: SET_PLAYLIST, playlist })\n      navigate(`/detail/${playlist._id}`)\n    }\n    catch (err) {\n      console.log('err', err)\n      showErrorMsg('Cannot save playlist')\n    }\n  }\n\n  async function onUploadImg(ev) {\n    try {\n      const newImgUrl = await uploadService.uploadImg(ev)\n      setPlaylistToEdit((prev) => ({ ...prev, imgUrl: newImgUrl }))\n      setImgUrl(newImgUrl)\n      showSuccessMsg('saved img!')\n    }\n    catch (err) {\n      console.log('err:', err)\n    }\n  }\n\n\n  const onEditImgClick = () => {\n    const input = document.createElement('input')\n    input.type = 'file'\n    input.accept = 'image/*'\n    input.addEventListener('change', onUploadImg)\n    input.click()\n  }\n\n  if (!user) return <span className='main-page playlist-details'>Please signup / login to create a playlist</span>\n  else return <section className='main-page playlist-details'>\n    <div className='playlist-detail-header'>\n\n      <div className='playlist-header-img-container '>\n\n        <img onClick={onEditImgClick} src={playlistToEdit.imgUrl} />\n\n      </div>\n\n      <div className='playlist-detail-header-info'>\n        <div className='playlist-detail-header-title-detail'>Playlist</div>\n\n\n        <h1 onClick={() => setIsEditing(true)} className='playlist-detail-header-title'>{playlistToEdit.name}</h1>\n\n        <form onSubmit={onSavePlaylist}>\n          <input type='text'\n            name='name'\n            className='playlist-detail-header-title-input'\n            id='name'\n            placeholder='playlist name...'\n            onChange={handleChange}\n          />\n          <button className='save-new-playlist' onMouseDown={onSavePlaylist} type='submit'>Save</button>\n        </form>\n\n      </div>\n    </div>\n  </section >\n\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/playlist.service.local.js",["254"],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/playlist.actions.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/event-bus.service.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/youtube.service.js",["255","256"],[],"import axios from 'axios'\n// const API_KEY = process.env.REACT_APP_API_KEY\nconst API_KEY = 'AIzaSyAi8TiL5zHDXOkZdPP6Aiyc1bVxynZagNI'\nexport const youtubeService = {\n  getVideoResults,\n  getTimeOfSong,\n  formatDuration,\n  convertDurationToSeconds\n}\n\nasync function getVideoResults(val) {\n  const results = []\n  try {\n    const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&maxResults=5&type=video&key=${API_KEY}&q=${val}`)\n    const videos = res.data.items\n    videos.map(video => {\n      if (video.snippet.title.includes('Trailer') || !video.snippet.title) return\n      const song = {\n        id: video.id.videoId,\n        title: video.snippet.title,\n        imgUrl: video.snippet.thumbnails.high.url,\n        artist: video.snippet.channelTitle\n      }\n      results.push(song)\n    })\n    return results\n  }\n  catch (err) {\n    console.log(err)\n    return err\n  }\n}\n\nasync function getTimeOfSong(val) {\n  console.log('vallllll', val)\n\n  if (!val) {\n    console.error('Error: Invalid or missing video ID');\n    throw new Error('Invalid or missing video ID');\n  }\n  console.log('val', val)\n  // const res = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=qwoyUpxjQ9c&part=contentDetails&key=AIzaSyDbYtw99FWbtr4RCHxS0dxtj3--vXfSp4E`)\n\n  const res = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${val}&part=contentDetails&key==${API_KEY}`)\n  console.log('API response', res);\n  console.log('API response data', res.data);\n\n  if (res.data.items && res.data.items[0]) {\n    console.log('getTimeOfSong', res.data.items[0].contentDetails.duration)\n    return res.data.items[0].contentDetails.duration\n  } else {\n    console.error('Error: Unable to fetch contentDetails for the given video ID');\n    throw new Error('Unable to fetch contentDetails for the given video ID');\n  }\n}\n\nfunction formatDuration(res) {\n  const isDuration = res.data.items[0].contentDetails.duration\n  const regex = /^PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?$/;\n  const matches = isDuration.match(regex);\n\n  const hours = parseInt(matches[1]) || 0;\n  const minutes = parseInt(matches[2]) || 0;\n  const seconds = parseInt(matches[3]) || 0;\n\n  const totalMinutes = (hours * 60) + minutes;\n  const formattedMinutes = totalMinutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  return `${formattedMinutes}:${formattedSeconds}`\n}\nfunction convertDurationToSeconds(res) {\n  const duration = res.data.items[0].contentDetails.duration\n\n  var match = duration.match(/PT(\\d+H)?(\\d+M)?(\\d+S)?/);\n  var hours = (parseInt(match[1]) || 0);\n  var minutes = (parseInt(match[2]) || 0);\n  var seconds = (parseInt(match[3]) || 0);\n  return hours * 3600 + minutes * 60 + seconds;\n}","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/util.service.js",["257"],[],"export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    debounce,\r\n    randomPastTime,\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    generateRandomColor\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn']\r\n    var txt = ''\r\n    while (size > 0) {\r\n        size--\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' '\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\nfunction randomPastTime() {\r\n    const HOUR = 1000 * 60 * 60\r\n    const DAY = 1000 * 60 * 60 * 24\r\n    const WEEK = 1000 * 60 * 60 * 24 * 7\r\n\r\n    const pastTime = getRandomIntInclusive(HOUR, WEEK)\r\n    return Date.now() - pastTime\r\n}\r\n\r\nfunction debounce(func, timeout = 300) {\r\n    let timer\r\n    return (...args) => {\r\n        clearTimeout(timer)\r\n        timer = setTimeout(() => { func.apply(this, args) }, timeout)\r\n    }\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    const data = localStorage.getItem(key)\r\n    return (data) ? JSON.parse(data) : undefined\r\n}\r\nfunction generateRandomColor() {\r\n    let maxVal = 0x333333; // limit to darker colors\r\n    let randomNumber = Math.random() * maxVal;\r\n    randomNumber = Math.floor(randomNumber);\r\n    randomNumber = randomNumber.toString(16);\r\n    let randColor = randomNumber.padStart(6, 0);\r\n    return `#${randColor.toUpperCase()}`\r\n}\r\n","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/upload.service.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/form.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/song-display.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/play-bar.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/options-bar.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-preview.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-filter.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/playlist-list.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/system/system.actions.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/genre-list.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/music.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/async-storage.service.js",[],[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/system/system.reducer.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/user.service.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/login-signup.jsx",["258"],[],"import { useState } from 'react'\r\nimport { LoginForm } from './login-form.jsx'\r\nimport { login, signup } from '../store/user.actions'\r\n\r\nexport function LoginSignup({ onChangeLoginStatus }) {\r\n\r\n    const [isSignup, setIsSignUp] = useState(false)\r\n\r\n    function onLogin(credentials) {\r\n        isSignup ? signup(credentials) : login(credentials)\r\n    }\r\n\r\n    return (\r\n        <div className='login-page'>\r\n            <LoginForm\r\n                onLogin={onLogin}\r\n                isSignup={isSignup}\r\n            />\r\n            <div className='btns'>\r\n                <a href='#' onClick={() => setIsSignUp(!isSignup)}>\r\n                    {isSignup ?\r\n                        'Already a member? Login' :\r\n                        'New user? Signup here'\r\n                    }\r\n                </a >\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","/Users/orit/Documents/CodingAcademy/spotify/frontend/src/cmps/login-form.jsx",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/user.service.local.js",["259"],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/user.actions.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/store/user.reducer.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/playlist.service.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/services/http.service.js",[],[],"/Users/orit/Documents/CodingAcademy/spotify/frontend/src/pages/playlist-like.jsx",[],[],{"ruleId":"260","severity":1,"message":"261","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"264","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":17},{"ruleId":"260","severity":1,"message":"265","line":1,"column":19,"nodeType":"262","messageId":"263","endLine":1,"endColumn":29},{"ruleId":"260","severity":1,"message":"266","line":1,"column":31,"nodeType":"262","messageId":"263","endLine":1,"endColumn":38},{"ruleId":"260","severity":1,"message":"267","line":3,"column":20,"nodeType":"262","messageId":"263","endLine":3,"endColumn":34},{"ruleId":"260","severity":1,"message":"268","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":23},{"ruleId":"260","severity":1,"message":"269","line":11,"column":11,"nodeType":"262","messageId":"263","endLine":11,"endColumn":22},{"ruleId":"260","severity":1,"message":"270","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":25},{"ruleId":"260","severity":1,"message":"271","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":18},{"ruleId":"260","severity":1,"message":"272","line":4,"column":20,"nodeType":"262","messageId":"263","endLine":4,"endColumn":30},{"ruleId":"260","severity":1,"message":"267","line":5,"column":24,"nodeType":"262","messageId":"263","endLine":5,"endColumn":38},{"ruleId":"260","severity":1,"message":"273","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":22},{"ruleId":"260","severity":1,"message":"274","line":14,"column":22,"nodeType":"262","messageId":"263","endLine":14,"endColumn":29},{"ruleId":"260","severity":1,"message":"275","line":36,"column":18,"nodeType":"262","messageId":"263","endLine":36,"endColumn":33},{"ruleId":"276","severity":1,"message":"277","line":28,"column":6,"nodeType":"278","endLine":28,"endColumn":17,"suggestions":"279"},{"ruleId":"260","severity":1,"message":"280","line":12,"column":9,"nodeType":"262","messageId":"263","endLine":12,"endColumn":17},{"ruleId":"276","severity":1,"message":"281","line":16,"column":6,"nodeType":"278","endLine":16,"endColumn":8,"suggestions":"282"},{"ruleId":"260","severity":1,"message":"283","line":26,"column":9,"nodeType":"262","messageId":"263","endLine":26,"endColumn":18},{"ruleId":"284","severity":1,"message":"285","line":102,"column":58,"nodeType":"286","endLine":102,"endColumn":170},{"ruleId":"260","severity":1,"message":"287","line":19,"column":10,"nodeType":"262","messageId":"263","endLine":19,"endColumn":18},{"ruleId":"260","severity":1,"message":"288","line":20,"column":10,"nodeType":"262","messageId":"263","endLine":20,"endColumn":19},{"ruleId":"276","severity":1,"message":"289","line":28,"column":6,"nodeType":"278","endLine":28,"endColumn":14,"suggestions":"290"},{"ruleId":"284","severity":1,"message":"285","line":95,"column":9,"nodeType":"286","endLine":95,"endColumn":69},{"ruleId":"260","severity":1,"message":"291","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":21},{"ruleId":"292","severity":1,"message":"293","line":16,"column":22,"nodeType":"294","messageId":"295","endLine":16,"endColumn":24},{"ruleId":"292","severity":1,"message":"296","line":17,"column":76,"nodeType":"297","messageId":"298","endLine":17,"endColumn":82},{"ruleId":"260","severity":1,"message":"299","line":40,"column":11,"nodeType":"262","messageId":"263","endLine":40,"endColumn":14},{"ruleId":"300","severity":1,"message":"301","line":20,"column":17,"nodeType":"286","endLine":20,"endColumn":68},{"ruleId":"260","severity":1,"message":"267","line":3,"column":24,"nodeType":"262","messageId":"263","endLine":3,"endColumn":38},"no-unused-vars","'playlistService' is defined but never used.","Identifier","unusedVar","'BackBtn' is defined but never used.","'ForwardBtn' is defined but never used.","'UserBtn' is defined but never used.","'showSuccessMsg' is defined but never used.","'changeUserMsg' is defined but never used.","'unsubscribe' is assigned a value but never used.","'PlaylistPreview' is defined but never used.","'GreenBtn' is defined but never used.","'LibrarySvg' is defined but never used.","'PlaylistList' is defined but never used.","'PlayBtn' is defined but never used.","'onLoadPlaylists' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["302"],"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'playlists'. Either include it or remove the dependency array.",["303"],"'playlists' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isMobile' is assigned a value but never used.","'isEditing' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'playlist'. Either include them or remove the dependency array.",["304"],"'userService' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'DAY' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [dispatch, genreName]",{"range":"311","text":"312"},"Update the dependencies array to be: [playlists]",{"range":"313","text":"314"},"Update the dependencies array to be: [dispatch, imgUrl, playlist]",{"range":"315","text":"316"},[1013,1024],"[dispatch, genreName]",[536,538],"[playlists]",[1133,1141],"[dispatch, imgUrl, playlist]"]